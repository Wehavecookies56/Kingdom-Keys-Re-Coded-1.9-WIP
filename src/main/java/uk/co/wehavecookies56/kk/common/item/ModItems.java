package uk.co.wehavecookies56.kk.common.item;

import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.block.model.ModelResourceLocation;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.SoundEvents;
import net.minecraft.inventory.EntityEquipmentSlot;
import net.minecraft.item.Item;
import net.minecraft.item.Item.ToolMaterial;
import net.minecraft.item.ItemArmor.ArmorMaterial;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.common.util.EnumHelper;
import net.minecraftforge.fml.common.registry.GameRegistry;
import uk.co.wehavecookies56.kk.client.sound.ModSounds;
import uk.co.wehavecookies56.kk.common.core.handler.ConfigHandler;
import uk.co.wehavecookies56.kk.common.item.base.ItemKKRecord;
import uk.co.wehavecookies56.kk.common.item.base.ItemKeyblade;
import uk.co.wehavecookies56.kk.common.item.base.ItemKeychain;
import uk.co.wehavecookies56.kk.common.item.base.ItemRealKeyblade;
import uk.co.wehavecookies56.kk.common.item.base.ItemRecipe;
import uk.co.wehavecookies56.kk.common.item.base.ItemSynthesisMaterial;
import uk.co.wehavecookies56.kk.common.item.org.ItemArpeggio;
import uk.co.wehavecookies56.kk.common.item.org.ItemBlazeofGlory;
import uk.co.wehavecookies56.kk.common.item.org.ItemBookofRetribution;
import uk.co.wehavecookies56.kk.common.item.org.ItemEternalFlames;
import uk.co.wehavecookies56.kk.common.item.org.ItemFairGame;
import uk.co.wehavecookies56.kk.common.item.org.ItemFoudre;
import uk.co.wehavecookies56.kk.common.item.org.ItemFrozenPride;
import uk.co.wehavecookies56.kk.common.item.org.ItemGracefulDahlia;
import uk.co.wehavecookies56.kk.common.item.org.ItemIfrit;
import uk.co.wehavecookies56.kk.common.item.org.ItemInterdiction;
import uk.co.wehavecookies56.kk.common.item.org.ItemLindworm;
import uk.co.wehavecookies56.kk.common.item.org.ItemLunatic;
import uk.co.wehavecookies56.kk.common.item.org.ItemPrometheus;
import uk.co.wehavecookies56.kk.common.item.org.ItemSharpshooter;
import uk.co.wehavecookies56.kk.common.item.org.ItemSkysplitter;
import uk.co.wehavecookies56.kk.common.lib.Reference;
import uk.co.wehavecookies56.kk.common.lib.Strings;

public class ModItems {

	// Organization
	public static Item Interdiction, Sharpshooter, Lindworm, FrozenPride, Skysplitter, BookofRetribution, Lunatic, EternalFlames, Arpeggio, FairGame, GracefulDahlia, Foudre, BlazeofGlory, Prometheus, Ifrit;

	public static Item BlazingInfusedCoal, FrostInfusedSnowBall, StormyInfusedIron, MythrilInfusedDiamond, LightningInfusedGold, BrightInfusedGlowStone, DarkInfusedIron, AbandonedKnowledge, DarkKnowledge, EclipsedKnowledge, ForgottenKnowledge, IlludedKnowledge, LostKnowledge, ManifestKnowledge, ObscuredKnowledge, UnknownKnowledge, VoidKnowledge;

	// Keyblades
	public static Item AbaddonPlasma, AbyssalTide, AllforOne, AnguisForetellersKeyblade, AstralBlast, Aubade, BondofFlame, Brightcrest, ChaosRipper, CircleofLife, Counterpoint, Crabclaw, CrownofGuilt, DarkerThanDark, Darkgnaw, DecisivePumpkin, DestinysEmbrace, DiamondDust, Divewing, DivineRose, DreamSword, DualDisc, Earthshaker, EndofPain, EndsoftheEarth, FairyHarp, FairyStars, FatalCrest, Fenrir, FerrisGear, FollowtheWind, FrolicFlame, GlimpseofDarkness, GuardianBell, GuardianSoul, GullWing, HerosCrest, HiddenDragon, Hyperdrive, IncompleteKiblade, JungleKing, KeybladeofPeoplesHearts, Kiblade, KingdomKey, KingdomKeyD, KnockoutPunch, LadyLuck, LeasKeyblade, LeopardosForetellersKeyblade, Leviathan, Lionheart, LostMemory, LunarEclipse, MarkofaHero, MasterXehanortsKeyblade, MastersDefender, MaverickFlare, MetalChocobo, MidnightRoar, MirageSplit, MissingAche, Monochrome, MysteriousAbyss, NightmaresEnd, NightmaresEndandMirageSplit, NoName, Oathkeeper, Oblivion, OceansRage, Olympia, OmegaWeapon, OminousBlight, OneWingedAngel, PainofSolitude, PhotonDebugger, PixiePetal, Pumpkinhead, Rainfell, RejectionofFate, RoyalRadiance, RumblingRose, SignofInnocence, SilentDirge, SkullNoise, SleepingLion, SoulEater, Spellbinder, StarSeeker, Starlight, Stormfall, StrokeofMidnight, SweetDreams, SweetMemories, Sweetstack, ThreeWishes, TotalEclipse, TreasureTrove, TrueLightsFlight, TwilightBlaze, TwoBecomeOne, UltimaWeaponKH1, UltimaWeaponKH2, UltimaWeaponBBS, UltimaWeaponDDD, Umbrella, Unbound, UnicornisForetellersKeyblade, UrsusForetellersKeyblade, VictoryLine, VoidGear, VulpeusForetellersKeyblade, WaytotheDawn, WaywardWind, WinnersProof, WishingLamp, WishingStar, WoodenKeyblade, WoodenStick, YoungXehanortsKeyblade, ZeroOne;

	// Chains
	public static Item Chain_AbaddonPlasma, Chain_AbyssalTide, Chain_AllforOne, Chain_AnguisForetellersKeyblade, Chain_AstralBlast, Chain_Aubade, Chain_BondofFlame, Chain_Brightcrest, Chain_ChaosRipper, Chain_CircleofLife, Chain_Counterpoint, Chain_Crabclaw, Chain_CrownofGuilt, Chain_DarkerThanDark, Chain_Darkgnaw, Chain_DecisivePumpkin, Chain_DestinysEmbrace, Chain_DiamondDust, Chain_Divewing, Chain_DivineRose, Chain_DreamSword, Chain_DualDisc, Chain_Earthshaker, Chain_EndofPain, Chain_EndsoftheEarth, Chain_FairyHarp, Chain_FairyStars, Chain_FatalCrest, Chain_Fenrir, Chain_FerrisGear, Chain_FollowtheWind, Chain_FrolicFlame, Chain_GlimpseofDarkness, Chain_GuardianBell, Chain_GuardianSoul, Chain_GullWing, Chain_HerosCrest, Chain_HiddenDragon, Chain_Hyperdrive, Chain_IncompleteKiblade, Chain_JungleKing, Chain_KeybladeofPeoplesHearts, Chain_Kiblade, Chain_KingdomKey, Chain_KingdomKeyD, Chain_KnockoutPunch, Chain_LadyLuck, Chain_LeasKeyblade, Chain_LeopardosForetellersKeyblade, Chain_Leviathan, Chain_Lionheart, Chain_LostMemory, Chain_LunarEclipse, Chain_MarkofaHero, Chain_MasterXehanortsKeyblade, Chain_MastersDefender, Chain_MaverickFlare, Chain_MetalChocobo, Chain_MidnightRoar, Chain_MirageSplit, Chain_MissingAche, Chain_Monochrome, Chain_MysteriousAbyss, Chain_NightmaresEnd, Chain_NightmaresEndandMirageSplit, Chain_NoName, Chain_Oathkeeper, Chain_Oblivion, Chain_OceansRage, Chain_Olympia, Chain_OmegaWeapon, Chain_OminousBlight, Chain_OneWingedAngel, Chain_PainofSolitude, Chain_PhotonDebugger, Chain_PixiePetal, Chain_Pumpkinhead, Chain_Rainfell, Chain_RejectionofFate, Chain_RoyalRadiance, Chain_RumblingRose, Chain_SignofInnocence, Chain_SilentDirge, Chain_SkullNoise, Chain_SleepingLion, Chain_SoulEater, Chain_Spellbinder, Chain_StarSeeker, Chain_Starlight, Chain_Stormfall, Chain_StrokeofMidnight, Chain_SweetDreams, Chain_SweetMemories, Chain_Sweetstack, Chain_ThreeWishes, Chain_TotalEclipse, Chain_TreasureTrove, Chain_TrueLightsFlight, Chain_TwilightBlaze, Chain_TwoBecomeOne, Chain_UltimaWeaponKH1, Chain_UltimaWeaponKH2, Chain_UltimaWeaponBBS, Chain_UltimaWeaponDDD, Chain_Umbrella, Chain_Unbound, Chain_UnicornisForetellersKeyblade, Chain_UrsusForetellersKeyblade, Chain_VictoryLine, Chain_VoidGear, Chain_VulpeusForetellersKeyblade, Chain_WaytotheDawn, Chain_WaywardWind, Chain_WinnersProof, Chain_WishingLamp, Chain_WishingStar, Chain_YoungXehanortsKeyblade, Chain_ZeroOne;

	// Misc
	public static Item Munny, EmptyBottle, Potion, Ether, Elixir, HpOrb, DriveOrb, MagicOrb, Heart, DarkHeart, PureHeart, KingdomHearts, DarkLeather, SynthesisMaterial, Recipe, IceCream, WinnerStick, LevelUpMagicFire, LevelUpMagicBlizzard, LevelUpMagicThunder, LevelUpMagicCure, LevelUpMagicAero, LevelUpMagicStop, LevelUpValor, LevelUpWisdom, LevelUpLimit, LevelUpMaster, LevelUpFinal, SynthesisBagS, SynthesisBagM, SynthesisBagL;

	// Music Discs
	public static Item Disc_Birth_by_Sleep_A_Link_to_the_Future, Disc_Darkness_of_the_Unknown, Disc_Dearly_Beloved_Symphony_Version, Disc_Dream_Drop_Distance_The_Next_Awakening, Disc_Hikari_KINGDOM_Instrumental_Version, Disc_L_Oscurita_Dell_Ignoto, Disc_Musique_pour_la_tristesse_de_Xion, Disc_No_More_Bugs_Bug_Version, Disc_Organization_XIII, Disc_Sanctuary, Disc_Simple_And_Clean_PLANITb_Remix, Disc_Sinister_Sundown, Disc_The_13th_Anthology;

	// Armour
	public static Item OrganizationRobe_Helmet, OrganizationRobe_Chestplate, OrganizationRobe_Leggings, OrganizationRobe_Boots, Terra_Helmet, Terra_Chestplate, Terra_Leggings, Terra_Boots, Aqua_Helmet, Aqua_Chestplate, Aqua_Leggings, Aqua_Boots, Ventus_Helmet, Ventus_Chestplate, Ventus_Leggings, Ventus_Boots, Eraqus_Helmet, Eraqus_Chestplate, Eraqus_Leggings, Eraqus_Boots;

	// Armour material
	private static ArmorMaterial ORGANIZATIONROBE = EnumHelper.addArmorMaterial("ORGANIZATIONROBE", Reference.MODID + ":organizationrobe", 35, new int[] { 3, 5, 8, 4 }, 15, SoundEvents.ITEM_ARMOR_EQUIP_LEATHER);
	private static ArmorMaterial TERRA = EnumHelper.addArmorMaterial("TERRA", Reference.MODID + ":terra", 35, new int[] { 5, 6, 9, 5 }, 15, SoundEvents.ITEM_ARMOR_EQUIP_IRON);
	private static ArmorMaterial AQUA = EnumHelper.addArmorMaterial("AQUA", Reference.MODID + ":aqua", 35, new int[] { 5, 6, 9, 5 }, 15, SoundEvents.ITEM_ARMOR_EQUIP_IRON);
	private static ArmorMaterial VENTUS = EnumHelper.addArmorMaterial("VENTUS", Reference.MODID + ":ventus", 35, new int[] { 5, 6, 9, 5 }, 15, SoundEvents.ITEM_ARMOR_EQUIP_IRON);
	private static ArmorMaterial ERAQUS = EnumHelper.addArmorMaterial("ERAQUS", Reference.MODID + ":eraqus", 35, new int[] { 5, 6, 9, 5 }, 15, SoundEvents.ITEM_ARMOR_EQUIP_IRON);

	//public static ToolMaterial KEYCHAIN = EnumHelper.addToolMaterial("KEYCHAIN", 0, -1, 0, 0, 20);

	
	public static CreativeTabs tabKingdomKeys;

	public static void init () {
		tabKingdomKeys = new TabKingdomKeys(CreativeTabs.getNextID(), Strings.tabKingdomKeys);

		BlazingInfusedCoal = new Item().setUnlocalizedName(Strings.BlazingInfusedCoal).setCreativeTab(tabKingdomKeys);
		FrostInfusedSnowBall = new Item().setUnlocalizedName(Strings.FrostInfusedSnowBall).setCreativeTab(tabKingdomKeys);
		StormyInfusedIron = new Item().setUnlocalizedName(Strings.StormyInfusedIron).setCreativeTab(tabKingdomKeys);
		MythrilInfusedDiamond = new Item().setUnlocalizedName(Strings.MythrilInfusedDiamond).setCreativeTab(tabKingdomKeys);
		LightningInfusedGold = new Item().setUnlocalizedName(Strings.LightningInfusedGold).setCreativeTab(tabKingdomKeys);
		BrightInfusedGlowStone = new Item().setUnlocalizedName(Strings.BrightInfusedGlowStone).setCreativeTab(tabKingdomKeys);
		DarkInfusedIron = new Item().setUnlocalizedName(Strings.DarkInfusedIron).setCreativeTab(tabKingdomKeys);

		AbandonedKnowledge = new Item().setUnlocalizedName(Strings.AbandonedKnowledge).setCreativeTab(tabKingdomKeys);
		DarkKnowledge = new Item().setUnlocalizedName(Strings.DarkKnowledge).setCreativeTab(tabKingdomKeys);
		EclipsedKnowledge = new Item().setUnlocalizedName(Strings.EclipsedKnowledge).setCreativeTab(tabKingdomKeys);
		ForgottenKnowledge = new Item().setUnlocalizedName(Strings.ForgottenKnowledge).setCreativeTab(tabKingdomKeys);
		IlludedKnowledge = new Item().setUnlocalizedName(Strings.IlludedKnowledge).setCreativeTab(tabKingdomKeys);
		LostKnowledge = new Item().setUnlocalizedName(Strings.LostKnowledge).setCreativeTab(tabKingdomKeys);
		ManifestKnowledge = new ItemManifestKnowledge().setUnlocalizedName(Strings.ManifestKnowledge).setCreativeTab(tabKingdomKeys);
		ObscuredKnowledge = new Item().setUnlocalizedName(Strings.ObscuredKnowledge).setCreativeTab(tabKingdomKeys);
		UnknownKnowledge = new Item().setUnlocalizedName(Strings.UnknownKnowledge).setCreativeTab(tabKingdomKeys);
		VoidKnowledge = new Item().setUnlocalizedName(Strings.VoidKnowledge).setCreativeTab(tabKingdomKeys);

		Interdiction = new ItemInterdiction(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Interdiction[0], Integer.parseInt(ConfigHandler.A_TM_Interdiction[1]), Integer.parseInt(ConfigHandler.A_TM_Interdiction[2]), Float.parseFloat(ConfigHandler.A_TM_Interdiction[3]), Float.parseFloat(ConfigHandler.A_TM_Interdiction[4]), Integer.parseInt(ConfigHandler.A_TM_Interdiction[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Interdiction);
		Sharpshooter = new ItemSharpshooter(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Sharpshooter[0], Integer.parseInt(ConfigHandler.A_TM_Sharpshooter[1]), Integer.parseInt(ConfigHandler.A_TM_Sharpshooter[2]), Float.parseFloat(ConfigHandler.A_TM_Sharpshooter[3]), Float.parseFloat(ConfigHandler.A_TM_Sharpshooter[4]), Integer.parseInt(ConfigHandler.A_TM_Sharpshooter[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Sharpshooter);
		Lindworm = new ItemLindworm(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Lindworm[0], Integer.parseInt(ConfigHandler.A_TM_Lindworm[1]), Integer.parseInt(ConfigHandler.A_TM_Lindworm[2]), Float.parseFloat(ConfigHandler.A_TM_Lindworm[3]), Float.parseFloat(ConfigHandler.A_TM_Lindworm[4]), Integer.parseInt(ConfigHandler.A_TM_Lindworm[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Lindworm);
		FrozenPride = new ItemFrozenPride().setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.FrozenPride);
		Skysplitter = new ItemSkysplitter(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Skysplitter[0], Integer.parseInt(ConfigHandler.A_TM_Skysplitter[1]), Integer.parseInt(ConfigHandler.A_TM_Skysplitter[2]), Float.parseFloat(ConfigHandler.A_TM_Skysplitter[3]), Float.parseFloat(ConfigHandler.A_TM_Skysplitter[4]), Integer.parseInt(ConfigHandler.A_TM_Skysplitter[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Skysplitter);
		BookofRetribution = new ItemBookofRetribution(EnumHelper.addToolMaterial(ConfigHandler.A_TM_BookofRetribution[0], Integer.parseInt(ConfigHandler.A_TM_BookofRetribution[1]), Integer.parseInt(ConfigHandler.A_TM_BookofRetribution[2]), Float.parseFloat(ConfigHandler.A_TM_BookofRetribution[3]), Float.parseFloat(ConfigHandler.A_TM_BookofRetribution[4]), Integer.parseInt(ConfigHandler.A_TM_BookofRetribution[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.BookofRetribution);
		Lunatic = new ItemLunatic(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Lunatic[0], Integer.parseInt(ConfigHandler.A_TM_Lunatic[1]), Integer.parseInt(ConfigHandler.A_TM_Lunatic[2]), Float.parseFloat(ConfigHandler.A_TM_Lunatic[3]), Float.parseFloat(ConfigHandler.A_TM_Lunatic[4]), Integer.parseInt(ConfigHandler.A_TM_Lunatic[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Lunatic);
		EternalFlames = new ItemEternalFlames(EnumHelper.addToolMaterial(ConfigHandler.A_TM_EternalFlames[0], Integer.parseInt(ConfigHandler.A_TM_EternalFlames[1]), Integer.parseInt(ConfigHandler.A_TM_EternalFlames[2]), Float.parseFloat(ConfigHandler.A_TM_EternalFlames[3]), Float.parseFloat(ConfigHandler.A_TM_EternalFlames[4]), Integer.parseInt(ConfigHandler.A_TM_EternalFlames[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.EternalFlames);
		Arpeggio = new ItemArpeggio(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Arpeggio[0], Integer.parseInt(ConfigHandler.A_TM_Arpeggio[1]), Integer.parseInt(ConfigHandler.A_TM_Arpeggio[2]), Float.parseFloat(ConfigHandler.A_TM_Arpeggio[3]), Float.parseFloat(ConfigHandler.A_TM_Arpeggio[4]), Integer.parseInt(ConfigHandler.A_TM_Arpeggio[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Arpeggio);
		FairGame = new ItemFairGame(EnumHelper.addToolMaterial(ConfigHandler.A_TM_FairGame[0], Integer.parseInt(ConfigHandler.A_TM_FairGame[1]), Integer.parseInt(ConfigHandler.A_TM_FairGame[2]), Float.parseFloat(ConfigHandler.A_TM_FairGame[3]), Float.parseFloat(ConfigHandler.A_TM_FairGame[4]), Integer.parseInt(ConfigHandler.A_TM_FairGame[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.FairGame);
		GracefulDahlia = new ItemGracefulDahlia(EnumHelper.addToolMaterial(ConfigHandler.A_TM_GracefulDahlia[0], Integer.parseInt(ConfigHandler.A_TM_GracefulDahlia[1]), Integer.parseInt(ConfigHandler.A_TM_GracefulDahlia[2]), Float.parseFloat(ConfigHandler.A_TM_GracefulDahlia[3]), Float.parseFloat(ConfigHandler.A_TM_GracefulDahlia[4]), Integer.parseInt(ConfigHandler.A_TM_GracefulDahlia[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.GracefulDahlia);
		Foudre = new ItemFoudre(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Foudre[0], Integer.parseInt(ConfigHandler.A_TM_Foudre[1]), Integer.parseInt(ConfigHandler.A_TM_Foudre[2]), Float.parseFloat(ConfigHandler.A_TM_Foudre[3]), Float.parseFloat(ConfigHandler.A_TM_Foudre[4]), Integer.parseInt(ConfigHandler.A_TM_Foudre[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Foudre);
		BlazeofGlory = new ItemBlazeofGlory(EnumHelper.addToolMaterial(ConfigHandler.A_TM_BlazeofGlory[0], Integer.parseInt(ConfigHandler.A_TM_BlazeofGlory[1]), Integer.parseInt(ConfigHandler.A_TM_BlazeofGlory[2]), Float.parseFloat(ConfigHandler.A_TM_BlazeofGlory[3]), Float.parseFloat(ConfigHandler.A_TM_BlazeofGlory[4]), Integer.parseInt(ConfigHandler.A_TM_BlazeofGlory[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.BlazeofGlory);
		Prometheus = new ItemPrometheus(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Prometheus[0], Integer.parseInt(ConfigHandler.A_TM_Prometheus[1]), Integer.parseInt(ConfigHandler.A_TM_Prometheus[2]), Float.parseFloat(ConfigHandler.A_TM_Prometheus[3]), Float.parseFloat(ConfigHandler.A_TM_Prometheus[4]), Integer.parseInt(ConfigHandler.A_TM_Prometheus[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Prometheus);
		Ifrit = new ItemIfrit(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Ifrit[0], Integer.parseInt(ConfigHandler.A_TM_Ifrit[1]), Integer.parseInt(ConfigHandler.A_TM_Ifrit[2]), Float.parseFloat(ConfigHandler.A_TM_Ifrit[3]), Float.parseFloat(ConfigHandler.A_TM_Ifrit[4]), Integer.parseInt(ConfigHandler.A_TM_Ifrit[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Ifrit);

		AbaddonPlasma = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_AbaddonPlasma[0], Integer.parseInt(ConfigHandler.A_TM_AbaddonPlasma[1]), Integer.parseInt(ConfigHandler.A_TM_AbaddonPlasma[2]), Float.parseFloat(ConfigHandler.A_TM_AbaddonPlasma[3]), Float.parseFloat(ConfigHandler.A_TM_AbaddonPlasma[4]), Integer.parseInt(ConfigHandler.A_TM_AbaddonPlasma[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.AbaddonPlasma);
		AbyssalTide = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_AbyssalTide[0], Integer.parseInt(ConfigHandler.A_TM_AbyssalTide[1]), Integer.parseInt(ConfigHandler.A_TM_AbyssalTide[2]), Float.parseFloat(ConfigHandler.A_TM_AbyssalTide[3]), Float.parseFloat(ConfigHandler.A_TM_AbyssalTide[4]), Integer.parseInt(ConfigHandler.A_TM_AbyssalTide[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.AbyssalTide);
		AllforOne = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_AllforOne[0], Integer.parseInt(ConfigHandler.A_TM_AllforOne[1]), Integer.parseInt(ConfigHandler.A_TM_AllforOne[2]), Float.parseFloat(ConfigHandler.A_TM_AllforOne[3]), Float.parseFloat(ConfigHandler.A_TM_AllforOne[4]), Integer.parseInt(ConfigHandler.A_TM_AllforOne[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.AllforOne);
		AnguisForetellersKeyblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_AnguisForetellersKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_AnguisForetellersKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_AnguisForetellersKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_AnguisForetellersKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_AnguisForetellersKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_AnguisForetellersKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.AnguisForetellersKeyblade);
		AstralBlast = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_AstralBlast[0], Integer.parseInt(ConfigHandler.A_TM_AstralBlast[1]), Integer.parseInt(ConfigHandler.A_TM_AstralBlast[2]), Float.parseFloat(ConfigHandler.A_TM_AstralBlast[3]), Float.parseFloat(ConfigHandler.A_TM_AstralBlast[4]), Integer.parseInt(ConfigHandler.A_TM_AstralBlast[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.AstralBlast);
		Aubade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Aubade[0], Integer.parseInt(ConfigHandler.A_TM_Aubade[1]), Integer.parseInt(ConfigHandler.A_TM_Aubade[2]), Float.parseFloat(ConfigHandler.A_TM_Aubade[3]), Float.parseFloat(ConfigHandler.A_TM_Aubade[4]), Integer.parseInt(ConfigHandler.A_TM_Aubade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Aubade);
		BondofFlame = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_BondofFlame[0], Integer.parseInt(ConfigHandler.A_TM_BondofFlame[1]), Integer.parseInt(ConfigHandler.A_TM_BondofFlame[2]), Float.parseFloat(ConfigHandler.A_TM_BondofFlame[3]), Float.parseFloat(ConfigHandler.A_TM_BondofFlame[4]), Integer.parseInt(ConfigHandler.A_TM_BondofFlame[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.BondofFlame);
		Brightcrest = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Brightcrest[0], Integer.parseInt(ConfigHandler.A_TM_Brightcrest[1]), Integer.parseInt(ConfigHandler.A_TM_Brightcrest[2]), Float.parseFloat(ConfigHandler.A_TM_Brightcrest[3]), Float.parseFloat(ConfigHandler.A_TM_Brightcrest[4]), Integer.parseInt(ConfigHandler.A_TM_Brightcrest[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Brightcrest);
		ChaosRipper = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_ChaosRipper[0], Integer.parseInt(ConfigHandler.A_TM_ChaosRipper[1]), Integer.parseInt(ConfigHandler.A_TM_ChaosRipper[2]), Float.parseFloat(ConfigHandler.A_TM_ChaosRipper[3]), Float.parseFloat(ConfigHandler.A_TM_ChaosRipper[4]), Integer.parseInt(ConfigHandler.A_TM_ChaosRipper[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.ChaosRipper);
		CircleofLife = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_CircleofLife[0], Integer.parseInt(ConfigHandler.A_TM_CircleofLife[1]), Integer.parseInt(ConfigHandler.A_TM_CircleofLife[2]), Float.parseFloat(ConfigHandler.A_TM_CircleofLife[3]), Float.parseFloat(ConfigHandler.A_TM_CircleofLife[4]), Integer.parseInt(ConfigHandler.A_TM_CircleofLife[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.CircleofLife);
		Counterpoint = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Counterpoint[0], Integer.parseInt(ConfigHandler.A_TM_Counterpoint[1]), Integer.parseInt(ConfigHandler.A_TM_Counterpoint[2]), Float.parseFloat(ConfigHandler.A_TM_Counterpoint[3]), Float.parseFloat(ConfigHandler.A_TM_Counterpoint[4]), Integer.parseInt(ConfigHandler.A_TM_Counterpoint[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Counterpoint);
		Crabclaw = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Crabclaw[0], Integer.parseInt(ConfigHandler.A_TM_Crabclaw[1]), Integer.parseInt(ConfigHandler.A_TM_Crabclaw[2]), Float.parseFloat(ConfigHandler.A_TM_Crabclaw[3]), Float.parseFloat(ConfigHandler.A_TM_Crabclaw[4]), Integer.parseInt(ConfigHandler.A_TM_Crabclaw[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Crabclaw);
		CrownofGuilt = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_CrownofGuilt[0], Integer.parseInt(ConfigHandler.A_TM_CrownofGuilt[1]), Integer.parseInt(ConfigHandler.A_TM_CrownofGuilt[2]), Float.parseFloat(ConfigHandler.A_TM_CrownofGuilt[3]), Float.parseFloat(ConfigHandler.A_TM_CrownofGuilt[4]), Integer.parseInt(ConfigHandler.A_TM_CrownofGuilt[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.CrownofGuilt);
		DarkerThanDark = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_DarkerThanDark[0], Integer.parseInt(ConfigHandler.A_TM_DarkerThanDark[1]), Integer.parseInt(ConfigHandler.A_TM_DarkerThanDark[2]), Float.parseFloat(ConfigHandler.A_TM_DarkerThanDark[3]), Float.parseFloat(ConfigHandler.A_TM_DarkerThanDark[4]), Integer.parseInt(ConfigHandler.A_TM_DarkerThanDark[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.DarkerThanDark);
		Darkgnaw = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Darkgnaw[0], Integer.parseInt(ConfigHandler.A_TM_Darkgnaw[1]), Integer.parseInt(ConfigHandler.A_TM_Darkgnaw[2]), Float.parseFloat(ConfigHandler.A_TM_Darkgnaw[3]), Float.parseFloat(ConfigHandler.A_TM_Darkgnaw[4]), Integer.parseInt(ConfigHandler.A_TM_Darkgnaw[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Darkgnaw);
		DecisivePumpkin = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_DecisivePumpkin[0], Integer.parseInt(ConfigHandler.A_TM_DecisivePumpkin[1]), Integer.parseInt(ConfigHandler.A_TM_DecisivePumpkin[2]), Float.parseFloat(ConfigHandler.A_TM_DecisivePumpkin[3]), Float.parseFloat(ConfigHandler.A_TM_DecisivePumpkin[4]), Integer.parseInt(ConfigHandler.A_TM_DecisivePumpkin[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.DecisivePumpkin);
		DestinysEmbrace = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_DestinysEmbrace[0], Integer.parseInt(ConfigHandler.A_TM_DestinysEmbrace[1]), Integer.parseInt(ConfigHandler.A_TM_DestinysEmbrace[2]), Float.parseFloat(ConfigHandler.A_TM_DestinysEmbrace[3]), Float.parseFloat(ConfigHandler.A_TM_DestinysEmbrace[4]), Integer.parseInt(ConfigHandler.A_TM_DestinysEmbrace[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.DestinysEmbrace);
		DiamondDust = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_DiamondDust[0], Integer.parseInt(ConfigHandler.A_TM_DiamondDust[1]), Integer.parseInt(ConfigHandler.A_TM_DiamondDust[2]), Float.parseFloat(ConfigHandler.A_TM_DiamondDust[3]), Float.parseFloat(ConfigHandler.A_TM_DiamondDust[4]), Integer.parseInt(ConfigHandler.A_TM_DiamondDust[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.DiamondDust);
		Divewing = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Divewing[0], Integer.parseInt(ConfigHandler.A_TM_Divewing[1]), Integer.parseInt(ConfigHandler.A_TM_Divewing[2]), Float.parseFloat(ConfigHandler.A_TM_Divewing[3]), Float.parseFloat(ConfigHandler.A_TM_Divewing[4]), Integer.parseInt(ConfigHandler.A_TM_Divewing[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Divewing);
		DivineRose = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_DivineRose[0], Integer.parseInt(ConfigHandler.A_TM_DivineRose[1]), Integer.parseInt(ConfigHandler.A_TM_DivineRose[2]), Float.parseFloat(ConfigHandler.A_TM_DivineRose[3]), Float.parseFloat(ConfigHandler.A_TM_DivineRose[4]), Integer.parseInt(ConfigHandler.A_TM_DivineRose[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.DivineRose);
		DreamSword = new ItemKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_DreamSword[0], Integer.parseInt(ConfigHandler.A_TM_DreamSword[1]), Integer.parseInt(ConfigHandler.A_TM_DreamSword[2]), Float.parseFloat(ConfigHandler.A_TM_DreamSword[3]), Float.parseFloat(ConfigHandler.A_TM_DreamSword[4]), Integer.parseInt(ConfigHandler.A_TM_DreamSword[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.DreamSword);
		DualDisc = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_DualDisc[0], Integer.parseInt(ConfigHandler.A_TM_DualDisc[1]), Integer.parseInt(ConfigHandler.A_TM_DualDisc[2]), Float.parseFloat(ConfigHandler.A_TM_DualDisc[3]), Float.parseFloat(ConfigHandler.A_TM_DualDisc[4]), Integer.parseInt(ConfigHandler.A_TM_DualDisc[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.DualDisc);
		Earthshaker = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Earthshaker[0], Integer.parseInt(ConfigHandler.A_TM_Earthshaker[1]), Integer.parseInt(ConfigHandler.A_TM_Earthshaker[2]), Float.parseFloat(ConfigHandler.A_TM_Earthshaker[3]), Float.parseFloat(ConfigHandler.A_TM_Earthshaker[4]), Integer.parseInt(ConfigHandler.A_TM_Earthshaker[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Earthshaker);
		EndofPain = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_EndofPain[0], Integer.parseInt(ConfigHandler.A_TM_EndofPain[1]), Integer.parseInt(ConfigHandler.A_TM_EndofPain[2]), Float.parseFloat(ConfigHandler.A_TM_EndofPain[3]), Float.parseFloat(ConfigHandler.A_TM_EndofPain[4]), Integer.parseInt(ConfigHandler.A_TM_EndofPain[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.EndofPain);
		EndsoftheEarth = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_EndsoftheEarth[0], Integer.parseInt(ConfigHandler.A_TM_EndsoftheEarth[1]), Integer.parseInt(ConfigHandler.A_TM_EndsoftheEarth[2]), Float.parseFloat(ConfigHandler.A_TM_EndsoftheEarth[3]), Float.parseFloat(ConfigHandler.A_TM_EndsoftheEarth[4]), Integer.parseInt(ConfigHandler.A_TM_EndsoftheEarth[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.EndsoftheEarth);
		FairyHarp = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_FairyHarp[0], Integer.parseInt(ConfigHandler.A_TM_FairyHarp[1]), Integer.parseInt(ConfigHandler.A_TM_FairyHarp[2]), Float.parseFloat(ConfigHandler.A_TM_FairyHarp[3]), Float.parseFloat(ConfigHandler.A_TM_FairyHarp[4]), Integer.parseInt(ConfigHandler.A_TM_FairyHarp[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.FairyHarp);
		FairyStars = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_FairyStars[0], Integer.parseInt(ConfigHandler.A_TM_FairyStars[1]), Integer.parseInt(ConfigHandler.A_TM_FairyStars[2]), Float.parseFloat(ConfigHandler.A_TM_FairyStars[3]), Float.parseFloat(ConfigHandler.A_TM_FairyStars[4]), Integer.parseInt(ConfigHandler.A_TM_FairyStars[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.FairyStars);
		FatalCrest = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_FatalCrest[0], Integer.parseInt(ConfigHandler.A_TM_FatalCrest[1]), Integer.parseInt(ConfigHandler.A_TM_FatalCrest[2]), Float.parseFloat(ConfigHandler.A_TM_FatalCrest[3]), Float.parseFloat(ConfigHandler.A_TM_FatalCrest[4]), Integer.parseInt(ConfigHandler.A_TM_FatalCrest[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.FatalCrest);
		Fenrir = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Fenrir[0], Integer.parseInt(ConfigHandler.A_TM_Fenrir[1]), Integer.parseInt(ConfigHandler.A_TM_Fenrir[2]), Float.parseFloat(ConfigHandler.A_TM_Fenrir[3]), Float.parseFloat(ConfigHandler.A_TM_Fenrir[4]), Integer.parseInt(ConfigHandler.A_TM_Fenrir[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Fenrir);
		FerrisGear = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_FerrisGear[0], Integer.parseInt(ConfigHandler.A_TM_FerrisGear[1]), Integer.parseInt(ConfigHandler.A_TM_FerrisGear[2]), Float.parseFloat(ConfigHandler.A_TM_FerrisGear[3]), Float.parseFloat(ConfigHandler.A_TM_FerrisGear[4]), Integer.parseInt(ConfigHandler.A_TM_FerrisGear[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.FerrisGear);
		FollowtheWind = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_FollowtheWind[0], Integer.parseInt(ConfigHandler.A_TM_FollowtheWind[1]), Integer.parseInt(ConfigHandler.A_TM_FollowtheWind[2]), Float.parseFloat(ConfigHandler.A_TM_FollowtheWind[3]), Float.parseFloat(ConfigHandler.A_TM_FollowtheWind[4]), Integer.parseInt(ConfigHandler.A_TM_FollowtheWind[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.FollowtheWind);
		FrolicFlame = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_FrolicFlame[0], Integer.parseInt(ConfigHandler.A_TM_FrolicFlame[1]), Integer.parseInt(ConfigHandler.A_TM_FrolicFlame[2]), Float.parseFloat(ConfigHandler.A_TM_FrolicFlame[3]), Float.parseFloat(ConfigHandler.A_TM_FrolicFlame[4]), Integer.parseInt(ConfigHandler.A_TM_FrolicFlame[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.FrolicFlame);
		GlimpseofDarkness = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_GlimpseofDarkness[0], Integer.parseInt(ConfigHandler.A_TM_GlimpseofDarkness[1]), Integer.parseInt(ConfigHandler.A_TM_GlimpseofDarkness[2]), Float.parseFloat(ConfigHandler.A_TM_GlimpseofDarkness[3]), Float.parseFloat(ConfigHandler.A_TM_GlimpseofDarkness[4]), Integer.parseInt(ConfigHandler.A_TM_GlimpseofDarkness[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.GlimpseofDarkness);
		GuardianBell = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_GuardianBell[0], Integer.parseInt(ConfigHandler.A_TM_GuardianBell[1]), Integer.parseInt(ConfigHandler.A_TM_GuardianBell[2]), Float.parseFloat(ConfigHandler.A_TM_GuardianBell[3]), Float.parseFloat(ConfigHandler.A_TM_GuardianBell[4]), Integer.parseInt(ConfigHandler.A_TM_GuardianBell[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.GuardianBell);
		GuardianSoul = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_GuardianSoul[0], Integer.parseInt(ConfigHandler.A_TM_GuardianSoul[1]), Integer.parseInt(ConfigHandler.A_TM_GuardianSoul[2]), Float.parseFloat(ConfigHandler.A_TM_GuardianSoul[3]), Float.parseFloat(ConfigHandler.A_TM_GuardianSoul[4]), Integer.parseInt(ConfigHandler.A_TM_GuardianSoul[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.GuardianSoul);
		GullWing = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_GullWing[0], Integer.parseInt(ConfigHandler.A_TM_GullWing[1]), Integer.parseInt(ConfigHandler.A_TM_GullWing[2]), Float.parseFloat(ConfigHandler.A_TM_GullWing[3]), Float.parseFloat(ConfigHandler.A_TM_GullWing[4]), Integer.parseInt(ConfigHandler.A_TM_GullWing[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.GullWing);
		HerosCrest = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_HerosCrest[0], Integer.parseInt(ConfigHandler.A_TM_HerosCrest[1]), Integer.parseInt(ConfigHandler.A_TM_HerosCrest[2]), Float.parseFloat(ConfigHandler.A_TM_HerosCrest[3]), Float.parseFloat(ConfigHandler.A_TM_HerosCrest[4]), Integer.parseInt(ConfigHandler.A_TM_HerosCrest[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.HerosCrest);
		HiddenDragon = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_HiddenDragon[0], Integer.parseInt(ConfigHandler.A_TM_HiddenDragon[1]), Integer.parseInt(ConfigHandler.A_TM_HiddenDragon[2]), Float.parseFloat(ConfigHandler.A_TM_HiddenDragon[3]), Float.parseFloat(ConfigHandler.A_TM_HiddenDragon[4]), Integer.parseInt(ConfigHandler.A_TM_HiddenDragon[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.HiddenDragon);
		Hyperdrive = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Hyperdrive[0], Integer.parseInt(ConfigHandler.A_TM_Hyperdrive[1]), Integer.parseInt(ConfigHandler.A_TM_Hyperdrive[2]), Float.parseFloat(ConfigHandler.A_TM_Hyperdrive[3]), Float.parseFloat(ConfigHandler.A_TM_Hyperdrive[4]), Integer.parseInt(ConfigHandler.A_TM_Hyperdrive[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Hyperdrive);
		IncompleteKiblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_IncompleteKiblade[0], Integer.parseInt(ConfigHandler.A_TM_IncompleteKiblade[1]), Integer.parseInt(ConfigHandler.A_TM_IncompleteKiblade[2]), Float.parseFloat(ConfigHandler.A_TM_IncompleteKiblade[3]), Float.parseFloat(ConfigHandler.A_TM_IncompleteKiblade[4]), Integer.parseInt(ConfigHandler.A_TM_IncompleteKiblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.IncompleteKiblade);
		JungleKing = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_JungleKing[0], Integer.parseInt(ConfigHandler.A_TM_JungleKing[1]), Integer.parseInt(ConfigHandler.A_TM_JungleKing[2]), Float.parseFloat(ConfigHandler.A_TM_JungleKing[3]), Float.parseFloat(ConfigHandler.A_TM_JungleKing[4]), Integer.parseInt(ConfigHandler.A_TM_JungleKing[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.JungleKing);
		KeybladeofPeoplesHearts = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_KeybladeofPeoplesHearts[0], Integer.parseInt(ConfigHandler.A_TM_KeybladeofPeoplesHearts[1]), Integer.parseInt(ConfigHandler.A_TM_KeybladeofPeoplesHearts[2]), Float.parseFloat(ConfigHandler.A_TM_KeybladeofPeoplesHearts[3]), Float.parseFloat(ConfigHandler.A_TM_KeybladeofPeoplesHearts[4]), Integer.parseInt(ConfigHandler.A_TM_KeybladeofPeoplesHearts[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.KeybladeofPeoplesHearts);
		Kiblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Kiblade[0], Integer.parseInt(ConfigHandler.A_TM_Kiblade[1]), Integer.parseInt(ConfigHandler.A_TM_Kiblade[2]), Float.parseFloat(ConfigHandler.A_TM_Kiblade[3]), Float.parseFloat(ConfigHandler.A_TM_Kiblade[4]), Integer.parseInt(ConfigHandler.A_TM_Kiblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Kiblade);
		KingdomKey = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_KingdomKey[0], Integer.parseInt(ConfigHandler.A_TM_KingdomKey[1]), Integer.parseInt(ConfigHandler.A_TM_KingdomKey[2]), Float.parseFloat(ConfigHandler.A_TM_KingdomKey[3]), Float.parseFloat(ConfigHandler.A_TM_KingdomKey[4]), Integer.parseInt(ConfigHandler.A_TM_KingdomKey[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.KingdomKey);
		KingdomKeyD = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_KingdomKeyD[0], Integer.parseInt(ConfigHandler.A_TM_KingdomKeyD[1]), Integer.parseInt(ConfigHandler.A_TM_KingdomKeyD[2]), Float.parseFloat(ConfigHandler.A_TM_KingdomKeyD[3]), Float.parseFloat(ConfigHandler.A_TM_KingdomKeyD[4]), Integer.parseInt(ConfigHandler.A_TM_KingdomKeyD[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.KingdomKeyD);
		KnockoutPunch = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_KnockoutPunch[0], Integer.parseInt(ConfigHandler.A_TM_KnockoutPunch[1]), Integer.parseInt(ConfigHandler.A_TM_KnockoutPunch[2]), Float.parseFloat(ConfigHandler.A_TM_KnockoutPunch[3]), Float.parseFloat(ConfigHandler.A_TM_KnockoutPunch[4]), Integer.parseInt(ConfigHandler.A_TM_KnockoutPunch[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.KnockoutPunch);
		LadyLuck = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_LadyLuck[0], Integer.parseInt(ConfigHandler.A_TM_LadyLuck[1]), Integer.parseInt(ConfigHandler.A_TM_LadyLuck[2]), Float.parseFloat(ConfigHandler.A_TM_LadyLuck[3]), Float.parseFloat(ConfigHandler.A_TM_LadyLuck[4]), Integer.parseInt(ConfigHandler.A_TM_LadyLuck[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.LadyLuck);
		LeasKeyblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_LeasKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_LeasKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_LeasKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_LeasKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_LeasKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_LeasKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.LeasKeyblade);
		LeopardosForetellersKeyblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_LeopardosForetellersKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_LeopardosForetellersKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_LeopardosForetellersKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_LeopardosForetellersKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_LeopardosForetellersKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_LeopardosForetellersKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.LeopardosForetellersKeyblade);
		Leviathan = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Leviathan[0], Integer.parseInt(ConfigHandler.A_TM_Leviathan[1]), Integer.parseInt(ConfigHandler.A_TM_Leviathan[2]), Float.parseFloat(ConfigHandler.A_TM_Leviathan[3]), Float.parseFloat(ConfigHandler.A_TM_Leviathan[4]), Integer.parseInt(ConfigHandler.A_TM_Leviathan[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Leviathan);
		Lionheart = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Lionheart[0], Integer.parseInt(ConfigHandler.A_TM_Lionheart[1]), Integer.parseInt(ConfigHandler.A_TM_Lionheart[2]), Float.parseFloat(ConfigHandler.A_TM_Lionheart[3]), Float.parseFloat(ConfigHandler.A_TM_Lionheart[4]), Integer.parseInt(ConfigHandler.A_TM_Lionheart[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Lionheart);
		LostMemory = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_LostMemory[0], Integer.parseInt(ConfigHandler.A_TM_LostMemory[1]), Integer.parseInt(ConfigHandler.A_TM_LostMemory[2]), Float.parseFloat(ConfigHandler.A_TM_LostMemory[3]), Float.parseFloat(ConfigHandler.A_TM_LostMemory[4]), Integer.parseInt(ConfigHandler.A_TM_LostMemory[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.LostMemory);
		LunarEclipse = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_LunarEclipse[0], Integer.parseInt(ConfigHandler.A_TM_LunarEclipse[1]), Integer.parseInt(ConfigHandler.A_TM_LunarEclipse[2]), Float.parseFloat(ConfigHandler.A_TM_LunarEclipse[3]), Float.parseFloat(ConfigHandler.A_TM_LunarEclipse[4]), Integer.parseInt(ConfigHandler.A_TM_LunarEclipse[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.LunarEclipse);
		MarkofaHero = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MarkofaHero[0], Integer.parseInt(ConfigHandler.A_TM_MarkofaHero[1]), Integer.parseInt(ConfigHandler.A_TM_MarkofaHero[2]), Float.parseFloat(ConfigHandler.A_TM_MarkofaHero[3]), Float.parseFloat(ConfigHandler.A_TM_MarkofaHero[4]), Integer.parseInt(ConfigHandler.A_TM_MarkofaHero[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MarkofaHero);
		MasterXehanortsKeyblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MasterXehanortsKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_MasterXehanortsKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_MasterXehanortsKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_MasterXehanortsKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_MasterXehanortsKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_MasterXehanortsKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MasterXehanortsKeyblade);
		MastersDefender = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MastersDefender[0], Integer.parseInt(ConfigHandler.A_TM_MastersDefender[1]), Integer.parseInt(ConfigHandler.A_TM_MastersDefender[2]), Float.parseFloat(ConfigHandler.A_TM_MastersDefender[3]), Float.parseFloat(ConfigHandler.A_TM_MastersDefender[4]), Integer.parseInt(ConfigHandler.A_TM_MastersDefender[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MastersDefender);
		MaverickFlare = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MaverickFlare[0], Integer.parseInt(ConfigHandler.A_TM_MaverickFlare[1]), Integer.parseInt(ConfigHandler.A_TM_MaverickFlare[2]), Float.parseFloat(ConfigHandler.A_TM_MaverickFlare[3]), Float.parseFloat(ConfigHandler.A_TM_MaverickFlare[4]), Integer.parseInt(ConfigHandler.A_TM_MaverickFlare[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MaverickFlare);
		MetalChocobo = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MetalChocobo[0], Integer.parseInt(ConfigHandler.A_TM_MetalChocobo[1]), Integer.parseInt(ConfigHandler.A_TM_MetalChocobo[2]), Float.parseFloat(ConfigHandler.A_TM_MetalChocobo[3]), Float.parseFloat(ConfigHandler.A_TM_MetalChocobo[4]), Integer.parseInt(ConfigHandler.A_TM_MetalChocobo[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MetalChocobo);
		MidnightRoar = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MidnightRoar[0], Integer.parseInt(ConfigHandler.A_TM_MidnightRoar[1]), Integer.parseInt(ConfigHandler.A_TM_MidnightRoar[2]), Float.parseFloat(ConfigHandler.A_TM_MidnightRoar[3]), Float.parseFloat(ConfigHandler.A_TM_MidnightRoar[4]), Integer.parseInt(ConfigHandler.A_TM_MidnightRoar[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MidnightRoar);
		MirageSplit = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MirageSplit[0], Integer.parseInt(ConfigHandler.A_TM_MirageSplit[1]), Integer.parseInt(ConfigHandler.A_TM_MirageSplit[2]), Float.parseFloat(ConfigHandler.A_TM_MirageSplit[3]), Float.parseFloat(ConfigHandler.A_TM_MirageSplit[4]), Integer.parseInt(ConfigHandler.A_TM_MirageSplit[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MirageSplit);
		MissingAche = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MissingAche[0], Integer.parseInt(ConfigHandler.A_TM_MissingAche[1]), Integer.parseInt(ConfigHandler.A_TM_MissingAche[2]), Float.parseFloat(ConfigHandler.A_TM_MissingAche[3]), Float.parseFloat(ConfigHandler.A_TM_MissingAche[4]), Integer.parseInt(ConfigHandler.A_TM_MissingAche[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MissingAche);
		Monochrome = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Monochrome[0], Integer.parseInt(ConfigHandler.A_TM_Monochrome[1]), Integer.parseInt(ConfigHandler.A_TM_Monochrome[2]), Float.parseFloat(ConfigHandler.A_TM_Monochrome[3]), Float.parseFloat(ConfigHandler.A_TM_Monochrome[4]), Integer.parseInt(ConfigHandler.A_TM_Monochrome[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Monochrome);
		MysteriousAbyss = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_MysteriousAbyss[0], Integer.parseInt(ConfigHandler.A_TM_MysteriousAbyss[1]), Integer.parseInt(ConfigHandler.A_TM_MysteriousAbyss[2]), Float.parseFloat(ConfigHandler.A_TM_MysteriousAbyss[3]), Float.parseFloat(ConfigHandler.A_TM_MysteriousAbyss[4]), Integer.parseInt(ConfigHandler.A_TM_MysteriousAbyss[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.MysteriousAbyss);
		NightmaresEnd = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_NightmaresEnd[0], Integer.parseInt(ConfigHandler.A_TM_NightmaresEnd[1]), Integer.parseInt(ConfigHandler.A_TM_NightmaresEnd[2]), Float.parseFloat(ConfigHandler.A_TM_NightmaresEnd[3]), Float.parseFloat(ConfigHandler.A_TM_NightmaresEnd[4]), Integer.parseInt(ConfigHandler.A_TM_NightmaresEnd[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.NightmaresEnd);
		NightmaresEndandMirageSplit = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_NightmaresEndandMirageSplit[0], Integer.parseInt(ConfigHandler.A_TM_NightmaresEndandMirageSplit[1]), Integer.parseInt(ConfigHandler.A_TM_NightmaresEndandMirageSplit[2]), Float.parseFloat(ConfigHandler.A_TM_NightmaresEndandMirageSplit[3]), Float.parseFloat(ConfigHandler.A_TM_NightmaresEndandMirageSplit[4]), Integer.parseInt(ConfigHandler.A_TM_NightmaresEndandMirageSplit[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.NightmaresEndandMirageSplit);
		NoName = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_NoName[0], Integer.parseInt(ConfigHandler.A_TM_NoName[1]), Integer.parseInt(ConfigHandler.A_TM_NoName[2]), Float.parseFloat(ConfigHandler.A_TM_NoName[3]), Float.parseFloat(ConfigHandler.A_TM_NoName[4]), Integer.parseInt(ConfigHandler.A_TM_NoName[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.NoName);
		Oathkeeper = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Oathkeeper[0], Integer.parseInt(ConfigHandler.A_TM_Oathkeeper[1]), Integer.parseInt(ConfigHandler.A_TM_Oathkeeper[2]), Float.parseFloat(ConfigHandler.A_TM_Oathkeeper[3]), Float.parseFloat(ConfigHandler.A_TM_Oathkeeper[4]), Integer.parseInt(ConfigHandler.A_TM_Oathkeeper[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Oathkeeper);
		Oblivion = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Oblivion[0], Integer.parseInt(ConfigHandler.A_TM_Oblivion[1]), Integer.parseInt(ConfigHandler.A_TM_Oblivion[2]), Float.parseFloat(ConfigHandler.A_TM_Oblivion[3]), Float.parseFloat(ConfigHandler.A_TM_Oblivion[4]), Integer.parseInt(ConfigHandler.A_TM_Oblivion[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Oblivion);
		OceansRage = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_OceansRage[0], Integer.parseInt(ConfigHandler.A_TM_OceansRage[1]), Integer.parseInt(ConfigHandler.A_TM_OceansRage[2]), Float.parseFloat(ConfigHandler.A_TM_OceansRage[3]), Float.parseFloat(ConfigHandler.A_TM_OceansRage[4]), Integer.parseInt(ConfigHandler.A_TM_OceansRage[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.OceansRage);
		Olympia = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Olympia[0], Integer.parseInt(ConfigHandler.A_TM_Olympia[1]), Integer.parseInt(ConfigHandler.A_TM_Olympia[2]), Float.parseFloat(ConfigHandler.A_TM_Olympia[3]), Float.parseFloat(ConfigHandler.A_TM_Olympia[4]), Integer.parseInt(ConfigHandler.A_TM_Olympia[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Olympia);
		OmegaWeapon = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_OmegaWeapon[0], Integer.parseInt(ConfigHandler.A_TM_OmegaWeapon[1]), Integer.parseInt(ConfigHandler.A_TM_OmegaWeapon[2]), Float.parseFloat(ConfigHandler.A_TM_OmegaWeapon[3]), Float.parseFloat(ConfigHandler.A_TM_OmegaWeapon[4]), Integer.parseInt(ConfigHandler.A_TM_OmegaWeapon[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.OmegaWeapon);
		OminousBlight = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_OminousBlight[0], Integer.parseInt(ConfigHandler.A_TM_OminousBlight[1]), Integer.parseInt(ConfigHandler.A_TM_OminousBlight[2]), Float.parseFloat(ConfigHandler.A_TM_OminousBlight[3]), Float.parseFloat(ConfigHandler.A_TM_OminousBlight[4]), Integer.parseInt(ConfigHandler.A_TM_OminousBlight[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.OminousBlight);
		OneWingedAngel = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_OneWingedAngel[0], Integer.parseInt(ConfigHandler.A_TM_OneWingedAngel[1]), Integer.parseInt(ConfigHandler.A_TM_OneWingedAngel[2]), Float.parseFloat(ConfigHandler.A_TM_OneWingedAngel[3]), Float.parseFloat(ConfigHandler.A_TM_OneWingedAngel[4]), Integer.parseInt(ConfigHandler.A_TM_OneWingedAngel[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.OneWingedAngel);
		PainofSolitude = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_PainofSolitude[0], Integer.parseInt(ConfigHandler.A_TM_PainofSolitude[1]), Integer.parseInt(ConfigHandler.A_TM_PainofSolitude[2]), Float.parseFloat(ConfigHandler.A_TM_PainofSolitude[3]), Float.parseFloat(ConfigHandler.A_TM_PainofSolitude[4]), Integer.parseInt(ConfigHandler.A_TM_PainofSolitude[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.PainofSolitude);
		PhotonDebugger = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_PhotonDebugger[0], Integer.parseInt(ConfigHandler.A_TM_PhotonDebugger[1]), Integer.parseInt(ConfigHandler.A_TM_PhotonDebugger[2]), Float.parseFloat(ConfigHandler.A_TM_PhotonDebugger[3]), Float.parseFloat(ConfigHandler.A_TM_PhotonDebugger[4]), Integer.parseInt(ConfigHandler.A_TM_PhotonDebugger[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.PhotonDebugger);
		PixiePetal = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_PixiePetal[0], Integer.parseInt(ConfigHandler.A_TM_PixiePetal[1]), Integer.parseInt(ConfigHandler.A_TM_PixiePetal[2]), Float.parseFloat(ConfigHandler.A_TM_PixiePetal[3]), Float.parseFloat(ConfigHandler.A_TM_PixiePetal[4]), Integer.parseInt(ConfigHandler.A_TM_PixiePetal[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.PixiePetal);
		Pumpkinhead = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Pumpkinhead[0], Integer.parseInt(ConfigHandler.A_TM_Pumpkinhead[1]), Integer.parseInt(ConfigHandler.A_TM_Pumpkinhead[2]), Float.parseFloat(ConfigHandler.A_TM_Pumpkinhead[3]), Float.parseFloat(ConfigHandler.A_TM_Pumpkinhead[4]), Integer.parseInt(ConfigHandler.A_TM_Pumpkinhead[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Pumpkinhead);
		Rainfell = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Rainfell[0], Integer.parseInt(ConfigHandler.A_TM_Rainfell[1]), Integer.parseInt(ConfigHandler.A_TM_Rainfell[2]), Float.parseFloat(ConfigHandler.A_TM_Rainfell[3]), Float.parseFloat(ConfigHandler.A_TM_Rainfell[4]), Integer.parseInt(ConfigHandler.A_TM_Rainfell[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Rainfell);
		RejectionofFate = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_RejectionofFate[0], Integer.parseInt(ConfigHandler.A_TM_RejectionofFate[1]), Integer.parseInt(ConfigHandler.A_TM_RejectionofFate[2]), Float.parseFloat(ConfigHandler.A_TM_RejectionofFate[3]), Float.parseFloat(ConfigHandler.A_TM_RejectionofFate[4]), Integer.parseInt(ConfigHandler.A_TM_RejectionofFate[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.RejectionofFate);
		RoyalRadiance = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_RoyalRadiance[0], Integer.parseInt(ConfigHandler.A_TM_RoyalRadiance[1]), Integer.parseInt(ConfigHandler.A_TM_RoyalRadiance[2]), Float.parseFloat(ConfigHandler.A_TM_RoyalRadiance[3]), Float.parseFloat(ConfigHandler.A_TM_RoyalRadiance[4]), Integer.parseInt(ConfigHandler.A_TM_RoyalRadiance[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.RoyalRadiance);
		RumblingRose = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_RumblingRose[0], Integer.parseInt(ConfigHandler.A_TM_RumblingRose[1]), Integer.parseInt(ConfigHandler.A_TM_RumblingRose[2]), Float.parseFloat(ConfigHandler.A_TM_RumblingRose[3]), Float.parseFloat(ConfigHandler.A_TM_RumblingRose[4]), Integer.parseInt(ConfigHandler.A_TM_RumblingRose[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.RumblingRose);
		SignofInnocence = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_SignofInnocence[0], Integer.parseInt(ConfigHandler.A_TM_SignofInnocence[1]), Integer.parseInt(ConfigHandler.A_TM_SignofInnocence[2]), Float.parseFloat(ConfigHandler.A_TM_SignofInnocence[3]), Float.parseFloat(ConfigHandler.A_TM_SignofInnocence[4]), Integer.parseInt(ConfigHandler.A_TM_SignofInnocence[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.SignofInnocence);
		SilentDirge = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_SilentDirge[0], Integer.parseInt(ConfigHandler.A_TM_SilentDirge[1]), Integer.parseInt(ConfigHandler.A_TM_SilentDirge[2]), Float.parseFloat(ConfigHandler.A_TM_SilentDirge[3]), Float.parseFloat(ConfigHandler.A_TM_SilentDirge[4]), Integer.parseInt(ConfigHandler.A_TM_SilentDirge[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.SilentDirge);
		SkullNoise = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_SkullNoise[0], Integer.parseInt(ConfigHandler.A_TM_SkullNoise[1]), Integer.parseInt(ConfigHandler.A_TM_SkullNoise[2]), Float.parseFloat(ConfigHandler.A_TM_SkullNoise[3]), Float.parseFloat(ConfigHandler.A_TM_SkullNoise[4]), Integer.parseInt(ConfigHandler.A_TM_SkullNoise[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.SkullNoise);
		SleepingLion = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_SleepingLion[0], Integer.parseInt(ConfigHandler.A_TM_SleepingLion[1]), Integer.parseInt(ConfigHandler.A_TM_SleepingLion[2]), Float.parseFloat(ConfigHandler.A_TM_SleepingLion[3]), Float.parseFloat(ConfigHandler.A_TM_SleepingLion[4]), Integer.parseInt(ConfigHandler.A_TM_SleepingLion[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.SleepingLion);
		SoulEater = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_SoulEater[0], Integer.parseInt(ConfigHandler.A_TM_SoulEater[1]), Integer.parseInt(ConfigHandler.A_TM_SoulEater[2]), Float.parseFloat(ConfigHandler.A_TM_SoulEater[3]), Float.parseFloat(ConfigHandler.A_TM_SoulEater[4]), Integer.parseInt(ConfigHandler.A_TM_SoulEater[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.SoulEater);
		Spellbinder = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Spellbinder[0], Integer.parseInt(ConfigHandler.A_TM_Spellbinder[1]), Integer.parseInt(ConfigHandler.A_TM_Spellbinder[2]), Float.parseFloat(ConfigHandler.A_TM_Spellbinder[3]), Float.parseFloat(ConfigHandler.A_TM_Spellbinder[4]), Integer.parseInt(ConfigHandler.A_TM_Spellbinder[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Spellbinder);
		Starlight = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Starlight[0], Integer.parseInt(ConfigHandler.A_TM_Starlight[1]), Integer.parseInt(ConfigHandler.A_TM_Starlight[2]), Float.parseFloat(ConfigHandler.A_TM_Starlight[3]), Float.parseFloat(ConfigHandler.A_TM_Starlight[4]), Integer.parseInt(ConfigHandler.A_TM_Starlight[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Starlight);
		StarSeeker = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_StarSeeker[0], Integer.parseInt(ConfigHandler.A_TM_StarSeeker[1]), Integer.parseInt(ConfigHandler.A_TM_StarSeeker[2]), Float.parseFloat(ConfigHandler.A_TM_StarSeeker[3]), Float.parseFloat(ConfigHandler.A_TM_StarSeeker[4]), Integer.parseInt(ConfigHandler.A_TM_StarSeeker[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.StarSeeker);
		Stormfall = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Stormfall[0], Integer.parseInt(ConfigHandler.A_TM_Stormfall[1]), Integer.parseInt(ConfigHandler.A_TM_Stormfall[2]), Float.parseFloat(ConfigHandler.A_TM_Stormfall[3]), Float.parseFloat(ConfigHandler.A_TM_Stormfall[4]), Integer.parseInt(ConfigHandler.A_TM_Stormfall[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Stormfall);
		StrokeofMidnight = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_StrokeofMidnight[0], Integer.parseInt(ConfigHandler.A_TM_StrokeofMidnight[1]), Integer.parseInt(ConfigHandler.A_TM_StrokeofMidnight[2]), Float.parseFloat(ConfigHandler.A_TM_StrokeofMidnight[3]), Float.parseFloat(ConfigHandler.A_TM_StrokeofMidnight[4]), Integer.parseInt(ConfigHandler.A_TM_StrokeofMidnight[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.StrokeofMidnight);
		SweetDreams = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_SweetDreams[0], Integer.parseInt(ConfigHandler.A_TM_SweetDreams[1]), Integer.parseInt(ConfigHandler.A_TM_SweetDreams[2]), Float.parseFloat(ConfigHandler.A_TM_SweetDreams[3]), Float.parseFloat(ConfigHandler.A_TM_SweetDreams[4]), Integer.parseInt(ConfigHandler.A_TM_SweetDreams[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.SweetDreams);
		SweetMemories = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_SweetMemories[0], Integer.parseInt(ConfigHandler.A_TM_SweetMemories[1]), Integer.parseInt(ConfigHandler.A_TM_SweetMemories[2]), Float.parseFloat(ConfigHandler.A_TM_SweetMemories[3]), Float.parseFloat(ConfigHandler.A_TM_SweetMemories[4]), Integer.parseInt(ConfigHandler.A_TM_SweetMemories[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.SweetMemories);
		Sweetstack = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Sweetstack[0], Integer.parseInt(ConfigHandler.A_TM_Sweetstack[1]), Integer.parseInt(ConfigHandler.A_TM_Sweetstack[2]), Float.parseFloat(ConfigHandler.A_TM_Sweetstack[3]), Float.parseFloat(ConfigHandler.A_TM_Sweetstack[4]), Integer.parseInt(ConfigHandler.A_TM_Sweetstack[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Sweetstack);
		ThreeWishes = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_ThreeWishes[0], Integer.parseInt(ConfigHandler.A_TM_ThreeWishes[1]), Integer.parseInt(ConfigHandler.A_TM_ThreeWishes[2]), Float.parseFloat(ConfigHandler.A_TM_ThreeWishes[3]), Float.parseFloat(ConfigHandler.A_TM_ThreeWishes[4]), Integer.parseInt(ConfigHandler.A_TM_ThreeWishes[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.ThreeWishes);
		TotalEclipse = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_TotalEclipse[0], Integer.parseInt(ConfigHandler.A_TM_TotalEclipse[1]), Integer.parseInt(ConfigHandler.A_TM_TotalEclipse[2]), Float.parseFloat(ConfigHandler.A_TM_TotalEclipse[3]), Float.parseFloat(ConfigHandler.A_TM_TotalEclipse[4]), Integer.parseInt(ConfigHandler.A_TM_TotalEclipse[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.TotalEclipse);
		TreasureTrove = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_TreasureTrove[0], Integer.parseInt(ConfigHandler.A_TM_TreasureTrove[1]), Integer.parseInt(ConfigHandler.A_TM_TreasureTrove[2]), Float.parseFloat(ConfigHandler.A_TM_TreasureTrove[3]), Float.parseFloat(ConfigHandler.A_TM_TreasureTrove[4]), Integer.parseInt(ConfigHandler.A_TM_TreasureTrove[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.TreasureTrove);
		TrueLightsFlight = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_TrueLightsFlight[0], Integer.parseInt(ConfigHandler.A_TM_TrueLightsFlight[1]), Integer.parseInt(ConfigHandler.A_TM_TrueLightsFlight[2]), Float.parseFloat(ConfigHandler.A_TM_TrueLightsFlight[3]), Float.parseFloat(ConfigHandler.A_TM_TrueLightsFlight[4]), Integer.parseInt(ConfigHandler.A_TM_TrueLightsFlight[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.TrueLightsFlight);
		TwilightBlaze = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_TwilightBlaze[0], Integer.parseInt(ConfigHandler.A_TM_TwilightBlaze[1]), Integer.parseInt(ConfigHandler.A_TM_TwilightBlaze[2]), Float.parseFloat(ConfigHandler.A_TM_TwilightBlaze[3]), Float.parseFloat(ConfigHandler.A_TM_TwilightBlaze[4]), Integer.parseInt(ConfigHandler.A_TM_TwilightBlaze[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.TwilightBlaze);
		TwoBecomeOne = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_TwoBecomeOne[0], Integer.parseInt(ConfigHandler.A_TM_TwoBecomeOne[1]), Integer.parseInt(ConfigHandler.A_TM_TwoBecomeOne[2]), Float.parseFloat(ConfigHandler.A_TM_TwoBecomeOne[3]), Float.parseFloat(ConfigHandler.A_TM_TwoBecomeOne[4]), Integer.parseInt(ConfigHandler.A_TM_TwoBecomeOne[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.TwoBecomeOne);
		UltimaWeaponKH1 = new ItemUltimaWeaponKH1(EnumHelper.addToolMaterial(ConfigHandler.A_TM_UltimaWeaponKH1[0], Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponKH1[1]), Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponKH1[2]), Float.parseFloat(ConfigHandler.A_TM_UltimaWeaponKH1[3]), Float.parseFloat(ConfigHandler.A_TM_UltimaWeaponKH1[4]), Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponKH1[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.UltimaWeaponKH1);
		UltimaWeaponKH2 = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_UltimaWeaponKH2[0], Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponKH2[1]), Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponKH2[2]), Float.parseFloat(ConfigHandler.A_TM_UltimaWeaponKH2[3]), Float.parseFloat(ConfigHandler.A_TM_UltimaWeaponKH2[4]), Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponKH2[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.UltimaWeaponKH2);
		UltimaWeaponBBS = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_UltimaWeaponBBS[0], Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponBBS[1]), Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponBBS[2]), Float.parseFloat(ConfigHandler.A_TM_UltimaWeaponBBS[3]), Float.parseFloat(ConfigHandler.A_TM_UltimaWeaponBBS[4]), Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponBBS[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.UltimaWeaponBBS);
		UltimaWeaponDDD = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_UltimaWeaponDDD[0], Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponDDD[1]), Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponDDD[2]), Float.parseFloat(ConfigHandler.A_TM_UltimaWeaponDDD[3]), Float.parseFloat(ConfigHandler.A_TM_UltimaWeaponDDD[4]), Integer.parseInt(ConfigHandler.A_TM_UltimaWeaponDDD[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.UltimaWeaponDDD);
		Umbrella = new ItemKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Umbrella[0], Integer.parseInt(ConfigHandler.A_TM_Umbrella[1]), Integer.parseInt(ConfigHandler.A_TM_Umbrella[2]), Float.parseFloat(ConfigHandler.A_TM_Umbrella[3]), Float.parseFloat(ConfigHandler.A_TM_Umbrella[4]), Integer.parseInt(ConfigHandler.A_TM_Umbrella[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Umbrella);
		Unbound = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_Unbound[0], Integer.parseInt(ConfigHandler.A_TM_Unbound[1]), Integer.parseInt(ConfigHandler.A_TM_Unbound[2]), Float.parseFloat(ConfigHandler.A_TM_Unbound[3]), Float.parseFloat(ConfigHandler.A_TM_Unbound[4]), Integer.parseInt(ConfigHandler.A_TM_Unbound[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.Unbound);
		UnicornisForetellersKeyblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_UnicornisForetellersKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_UnicornisForetellersKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_UnicornisForetellersKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_UnicornisForetellersKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_UnicornisForetellersKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_UnicornisForetellersKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.UnicornisForetellersKeyblade);
		UrsusForetellersKeyblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_UrsusForetellersKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_UrsusForetellersKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_UrsusForetellersKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_UrsusForetellersKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_UrsusForetellersKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_UrsusForetellersKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.UrsusForetellersKeyblade);
		VictoryLine = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_VictoryLine[0], Integer.parseInt(ConfigHandler.A_TM_VictoryLine[1]), Integer.parseInt(ConfigHandler.A_TM_VictoryLine[2]), Float.parseFloat(ConfigHandler.A_TM_VictoryLine[3]), Float.parseFloat(ConfigHandler.A_TM_VictoryLine[4]), Integer.parseInt(ConfigHandler.A_TM_VictoryLine[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.VictoryLine);
		VoidGear = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_VoidGear[0], Integer.parseInt(ConfigHandler.A_TM_VoidGear[1]), Integer.parseInt(ConfigHandler.A_TM_VoidGear[2]), Float.parseFloat(ConfigHandler.A_TM_VoidGear[3]), Float.parseFloat(ConfigHandler.A_TM_VoidGear[4]), Integer.parseInt(ConfigHandler.A_TM_VoidGear[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.VoidGear);
		VulpeusForetellersKeyblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_VulpeusForetellersKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_VulpeusForetellersKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_VulpeusForetellersKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_VulpeusForetellersKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_VulpeusForetellersKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_VulpeusForetellersKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.VulpeusForetellersKeyblade);
		WaytotheDawn = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_WaytotheDawn[0], Integer.parseInt(ConfigHandler.A_TM_WaytotheDawn[1]), Integer.parseInt(ConfigHandler.A_TM_WaytotheDawn[2]), Float.parseFloat(ConfigHandler.A_TM_WaytotheDawn[3]), Float.parseFloat(ConfigHandler.A_TM_WaytotheDawn[4]), Integer.parseInt(ConfigHandler.A_TM_WaytotheDawn[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.WaytotheDawn);
		WaywardWind = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_WaywardWind[0], Integer.parseInt(ConfigHandler.A_TM_WaywardWind[1]), Integer.parseInt(ConfigHandler.A_TM_WaywardWind[2]), Float.parseFloat(ConfigHandler.A_TM_WaywardWind[3]), Float.parseFloat(ConfigHandler.A_TM_WaywardWind[4]), Integer.parseInt(ConfigHandler.A_TM_WaywardWind[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.WaywardWind);
		WinnersProof = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_WinnersProof[0], Integer.parseInt(ConfigHandler.A_TM_WinnersProof[1]), Integer.parseInt(ConfigHandler.A_TM_WinnersProof[2]), Float.parseFloat(ConfigHandler.A_TM_WinnersProof[3]), Float.parseFloat(ConfigHandler.A_TM_WinnersProof[4]), Integer.parseInt(ConfigHandler.A_TM_WinnersProof[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.WinnersProof);
		WishingLamp = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_WishingLamp[0], Integer.parseInt(ConfigHandler.A_TM_WishingLamp[1]), Integer.parseInt(ConfigHandler.A_TM_WishingLamp[2]), Float.parseFloat(ConfigHandler.A_TM_WishingLamp[3]), Float.parseFloat(ConfigHandler.A_TM_WishingLamp[4]), Integer.parseInt(ConfigHandler.A_TM_WishingLamp[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.WishingLamp);
		WishingStar = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_WishingStar[0], Integer.parseInt(ConfigHandler.A_TM_WishingStar[1]), Integer.parseInt(ConfigHandler.A_TM_WishingStar[2]), Float.parseFloat(ConfigHandler.A_TM_WishingStar[3]), Float.parseFloat(ConfigHandler.A_TM_WishingStar[4]), Integer.parseInt(ConfigHandler.A_TM_WishingStar[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.WishingStar);
		WoodenKeyblade = new ItemKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_WoodenKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_WoodenKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_WoodenKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_WoodenKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_WoodenKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_WoodenKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.WoodenKeyblade);
		WoodenStick = new ItemKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_WoodenStick[0], Integer.parseInt(ConfigHandler.A_TM_WoodenStick[1]), Integer.parseInt(ConfigHandler.A_TM_WoodenStick[2]), Float.parseFloat(ConfigHandler.A_TM_WoodenStick[3]), Float.parseFloat(ConfigHandler.A_TM_WoodenStick[4]), Integer.parseInt(ConfigHandler.A_TM_WoodenStick[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.WoodenStick);
		YoungXehanortsKeyblade = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_YoungXehanortsKeyblade[0], Integer.parseInt(ConfigHandler.A_TM_YoungXehanortsKeyblade[1]), Integer.parseInt(ConfigHandler.A_TM_YoungXehanortsKeyblade[2]), Float.parseFloat(ConfigHandler.A_TM_YoungXehanortsKeyblade[3]), Float.parseFloat(ConfigHandler.A_TM_YoungXehanortsKeyblade[4]), Integer.parseInt(ConfigHandler.A_TM_YoungXehanortsKeyblade[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.YoungXehanortsKeyblade);
		ZeroOne = new ItemRealKeyblade(EnumHelper.addToolMaterial(ConfigHandler.A_TM_ZeroOne[0], Integer.parseInt(ConfigHandler.A_TM_ZeroOne[1]), Integer.parseInt(ConfigHandler.A_TM_ZeroOne[2]), Float.parseFloat(ConfigHandler.A_TM_ZeroOne[3]), Float.parseFloat(ConfigHandler.A_TM_ZeroOne[4]), Integer.parseInt(ConfigHandler.A_TM_ZeroOne[5]))).setCreativeTab(tabKingdomKeys).setUnlocalizedName(Strings.ZeroOne);

		// CHAINS
		Chain_AbaddonPlasma = new ItemKeychain((ItemKeyblade) AbaddonPlasma, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_AbaddonPlasma).setCreativeTab(tabKingdomKeys);
		Chain_AbyssalTide = new ItemKeychain((ItemKeyblade) AbyssalTide, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_AbyssalTide).setCreativeTab(tabKingdomKeys);
		Chain_AllforOne = new ItemKeychain((ItemKeyblade) AllforOne, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_AllforOne).setCreativeTab(tabKingdomKeys);
		Chain_AnguisForetellersKeyblade = new ItemKeychain((ItemKeyblade) AnguisForetellersKeyblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_AnguisForetellersKeyblade).setCreativeTab(tabKingdomKeys);
		Chain_AstralBlast = new ItemKeychain((ItemKeyblade) AstralBlast, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_AstralBlast).setCreativeTab(tabKingdomKeys);
		Chain_Aubade = new ItemKeychain((ItemKeyblade) Aubade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Aubade).setCreativeTab(tabKingdomKeys);
		Chain_BondofFlame = new ItemKeychain((ItemKeyblade) BondofFlame, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_BondofFlame).setCreativeTab(tabKingdomKeys);
		Chain_Brightcrest = new ItemKeychain((ItemKeyblade) Brightcrest, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Brightcrest).setCreativeTab(tabKingdomKeys);
		Chain_ChaosRipper = new ItemKeychain((ItemKeyblade) ChaosRipper, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_ChaosRipper).setCreativeTab(tabKingdomKeys);
		Chain_CircleofLife = new ItemKeychain((ItemKeyblade) CircleofLife, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_CircleofLife).setCreativeTab(tabKingdomKeys);
		Chain_Counterpoint = new ItemKeychain((ItemKeyblade) Counterpoint, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Counterpoint).setCreativeTab(tabKingdomKeys);
		Chain_Crabclaw = new ItemKeychain((ItemKeyblade) Crabclaw, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Crabclaw).setCreativeTab(tabKingdomKeys);
		Chain_CrownofGuilt = new ItemKeychain((ItemKeyblade) CrownofGuilt, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_CrownofGuilt).setCreativeTab(tabKingdomKeys);
		Chain_DarkerThanDark = new ItemKeychain((ItemKeyblade) DarkerThanDark, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_DarkerThanDark).setCreativeTab(tabKingdomKeys);
		Chain_Darkgnaw = new ItemKeychain((ItemKeyblade) Darkgnaw, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Darkgnaw).setCreativeTab(tabKingdomKeys);
		Chain_DecisivePumpkin = new ItemKeychain((ItemKeyblade) DecisivePumpkin, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_DecisivePumpkin).setCreativeTab(tabKingdomKeys);
		Chain_DestinysEmbrace = new ItemKeychain((ItemKeyblade) DestinysEmbrace, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_DestinysEmbrace).setCreativeTab(tabKingdomKeys);
		Chain_DiamondDust = new ItemKeychain((ItemKeyblade) DiamondDust, ToolMaterial.WOOD).setUnlocalizedName(Strings.DiamondDust).setCreativeTab(tabKingdomKeys);
		Chain_Divewing = new ItemKeychain((ItemKeyblade) Divewing, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Divewing).setCreativeTab(tabKingdomKeys);
		Chain_DivineRose = new ItemKeychain((ItemKeyblade) DivineRose, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_DivineRose).setCreativeTab(tabKingdomKeys);
		Chain_DreamSword = new ItemKeychain((ItemKeyblade) DreamSword, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_DreamSword).setCreativeTab(tabKingdomKeys);
		Chain_DualDisc = new ItemKeychain((ItemKeyblade) DualDisc, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_DualDisc).setCreativeTab(tabKingdomKeys);
		Chain_Earthshaker = new ItemKeychain((ItemKeyblade) Earthshaker, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Earthshaker).setCreativeTab(tabKingdomKeys);
		Chain_EndofPain = new ItemKeychain((ItemKeyblade) EndofPain, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_EndofPain).setCreativeTab(tabKingdomKeys);
		Chain_EndsoftheEarth = new ItemKeychain((ItemKeyblade) EndsoftheEarth, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_EndsoftheEarth).setCreativeTab(tabKingdomKeys);
		Chain_FairyHarp = new ItemKeychain((ItemKeyblade) FairyHarp, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_FairyHarp).setCreativeTab(tabKingdomKeys);
		Chain_FairyStars = new ItemKeychain((ItemKeyblade) FairyStars, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_FairyStars).setCreativeTab(tabKingdomKeys);
		Chain_FatalCrest = new ItemKeychain((ItemKeyblade) FatalCrest, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_FatalCrest).setCreativeTab(tabKingdomKeys);
		Chain_Fenrir = new ItemKeychain((ItemKeyblade) Fenrir, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Fenrir).setCreativeTab(tabKingdomKeys);
		Chain_FerrisGear = new ItemKeychain((ItemKeyblade) FerrisGear, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_FerrisGear).setCreativeTab(tabKingdomKeys);
		Chain_FollowtheWind = new ItemKeychain((ItemKeyblade) FollowtheWind, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_FollowtheWind).setCreativeTab(tabKingdomKeys);
		Chain_FrolicFlame = new ItemKeychain((ItemKeyblade) FrolicFlame, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_FrolicFlame).setCreativeTab(tabKingdomKeys);
		Chain_GlimpseofDarkness = new ItemKeychain((ItemKeyblade) GlimpseofDarkness, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_GlimpseofDarkness).setCreativeTab(tabKingdomKeys);
		Chain_GuardianBell = new ItemKeychain((ItemKeyblade) GuardianBell, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_GuardianBell).setCreativeTab(tabKingdomKeys);
		Chain_GuardianSoul = new ItemKeychain((ItemKeyblade) GuardianSoul, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_GuardianSoul).setCreativeTab(tabKingdomKeys);
		Chain_GullWing = new ItemKeychain((ItemKeyblade) GullWing, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_GullWing).setCreativeTab(tabKingdomKeys);
		Chain_HerosCrest = new ItemKeychain((ItemKeyblade) HerosCrest, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_HerosCrest).setCreativeTab(tabKingdomKeys);
		Chain_HiddenDragon = new ItemKeychain((ItemKeyblade) HiddenDragon, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_HiddenDragon).setCreativeTab(tabKingdomKeys);
		Chain_Hyperdrive = new ItemKeychain((ItemKeyblade) Hyperdrive, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Hyperdrive).setCreativeTab(tabKingdomKeys);
		Chain_IncompleteKiblade = new ItemKeychain((ItemKeyblade) IncompleteKiblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_IncompleteKiblade).setCreativeTab(tabKingdomKeys);
		Chain_JungleKing = new ItemKeychain((ItemKeyblade) JungleKing, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_JungleKing).setCreativeTab(tabKingdomKeys);
		Chain_KeybladeofPeoplesHearts = new ItemKeychain((ItemKeyblade) KeybladeofPeoplesHearts, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_KeybladeofPeoplesHearts).setCreativeTab(tabKingdomKeys);
		Chain_Kiblade = new ItemKeychain((ItemKeyblade) Kiblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Kiblade).setCreativeTab(tabKingdomKeys);
		Chain_KingdomKey = new ItemKeychain((ItemKeyblade) KingdomKey, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_KingdomKey).setCreativeTab(tabKingdomKeys);
		Chain_KingdomKeyD = new ItemKeychain((ItemKeyblade) KingdomKeyD, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_KingdomKeyD).setCreativeTab(tabKingdomKeys);
		Chain_KnockoutPunch = new ItemKeychain((ItemKeyblade) KnockoutPunch, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_KnockoutPunch).setCreativeTab(tabKingdomKeys);
		Chain_LadyLuck = new ItemKeychain((ItemKeyblade) LadyLuck, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_LadyLuck).setCreativeTab(tabKingdomKeys);
		Chain_LeasKeyblade = new ItemKeychain((ItemKeyblade) LeasKeyblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_LeasKeyblade).setCreativeTab(tabKingdomKeys);
		Chain_LeopardosForetellersKeyblade = new ItemKeychain((ItemKeyblade) LeopardosForetellersKeyblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_LeopardosForetellersKeyblade).setCreativeTab(tabKingdomKeys);
		Chain_Leviathan = new ItemKeychain((ItemKeyblade) Leviathan, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Leviathan).setCreativeTab(tabKingdomKeys);
		Chain_Lionheart = new ItemKeychain((ItemKeyblade) Lionheart, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Lionheart).setCreativeTab(tabKingdomKeys);
		Chain_LostMemory = new ItemKeychain((ItemKeyblade) LostMemory, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_LostMemory).setCreativeTab(tabKingdomKeys);
		Chain_LunarEclipse = new ItemKeychain((ItemKeyblade) LunarEclipse, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_LunarEclipse).setCreativeTab(tabKingdomKeys);
		Chain_MarkofaHero = new ItemKeychain((ItemKeyblade) MarkofaHero, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MarkofaHero).setCreativeTab(tabKingdomKeys);
		Chain_MasterXehanortsKeyblade = new ItemKeychain((ItemKeyblade) MasterXehanortsKeyblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MasterXehanortsKeyblade).setCreativeTab(tabKingdomKeys);
		Chain_MastersDefender = new ItemKeychain((ItemKeyblade) MastersDefender, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MastersDefender).setCreativeTab(tabKingdomKeys);
		Chain_MaverickFlare = new ItemKeychain((ItemKeyblade) MaverickFlare, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MaverickFlare).setCreativeTab(tabKingdomKeys);
		Chain_MetalChocobo = new ItemKeychain((ItemKeyblade) MetalChocobo, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MetalChocobo).setCreativeTab(tabKingdomKeys);
		Chain_MidnightRoar = new ItemKeychain((ItemKeyblade) MidnightRoar, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MidnightRoar).setCreativeTab(tabKingdomKeys);
		Chain_MirageSplit = new ItemKeychain((ItemKeyblade) MirageSplit, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MirageSplit).setCreativeTab(tabKingdomKeys);
		Chain_MissingAche = new ItemKeychain((ItemKeyblade) MissingAche, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MissingAche).setCreativeTab(tabKingdomKeys);
		Chain_Monochrome = new ItemKeychain((ItemKeyblade) Monochrome, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Monochrome).setCreativeTab(tabKingdomKeys);
		Chain_MysteriousAbyss = new ItemKeychain((ItemKeyblade) MysteriousAbyss, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_MysteriousAbyss).setCreativeTab(tabKingdomKeys);
		Chain_NightmaresEnd = new ItemKeychain((ItemKeyblade) NightmaresEnd, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_NightmaresEnd).setCreativeTab(tabKingdomKeys);
		Chain_NightmaresEndandMirageSplit = new ItemKeychain((ItemKeyblade) NightmaresEndandMirageSplit, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_NightmaresEndandMirageSplit).setCreativeTab(tabKingdomKeys);
		Chain_NoName = new ItemKeychain((ItemKeyblade) NoName, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_NoName).setCreativeTab(tabKingdomKeys);
		Chain_Oathkeeper = new ItemKeychain((ItemKeyblade) Oathkeeper, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Oathkeeper).setCreativeTab(tabKingdomKeys);
		Chain_Oblivion = new ItemKeychain((ItemKeyblade) Oblivion, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Oblivion).setCreativeTab(tabKingdomKeys);
		Chain_OceansRage = new ItemKeychain((ItemKeyblade) OceansRage, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_OceansRage).setCreativeTab(tabKingdomKeys);
		Chain_Olympia = new ItemKeychain((ItemKeyblade) Olympia, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Olympia).setCreativeTab(tabKingdomKeys);
		Chain_OmegaWeapon = new ItemKeychain((ItemKeyblade) OmegaWeapon, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_OmegaWeapon).setCreativeTab(tabKingdomKeys);
		Chain_OminousBlight = new ItemKeychain((ItemKeyblade) OminousBlight, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_OminousBlight).setCreativeTab(tabKingdomKeys);
		Chain_OneWingedAngel = new ItemKeychain((ItemKeyblade) OneWingedAngel, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_OneWingedAngel).setCreativeTab(tabKingdomKeys);
		Chain_PainofSolitude = new ItemKeychain((ItemKeyblade) PainofSolitude, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_PainofSolitude).setCreativeTab(tabKingdomKeys);
		Chain_PhotonDebugger = new ItemKeychain((ItemKeyblade) PhotonDebugger, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_PhotonDebugger).setCreativeTab(tabKingdomKeys);
		Chain_PixiePetal = new ItemKeychain((ItemKeyblade) PixiePetal, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_PixiePetal).setCreativeTab(tabKingdomKeys);
		Chain_Pumpkinhead = new ItemKeychain((ItemKeyblade) Pumpkinhead, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Pumpkinhead).setCreativeTab(tabKingdomKeys);
		Chain_Rainfell = new ItemKeychain((ItemKeyblade) Rainfell, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Rainfell).setCreativeTab(tabKingdomKeys);
		Chain_RejectionofFate = new ItemKeychain((ItemKeyblade) RejectionofFate, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_RejectionofFate).setCreativeTab(tabKingdomKeys);
		Chain_RoyalRadiance = new ItemKeychain((ItemKeyblade) RoyalRadiance, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_RoyalRadiance).setCreativeTab(tabKingdomKeys);
		Chain_RumblingRose = new ItemKeychain((ItemKeyblade) RumblingRose, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_RumblingRose).setCreativeTab(tabKingdomKeys);
		Chain_SignofInnocence = new ItemKeychain((ItemKeyblade) SignofInnocence, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_SignofInnocence).setCreativeTab(tabKingdomKeys);
		Chain_SilentDirge = new ItemKeychain((ItemKeyblade) SilentDirge, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_SilentDirge).setCreativeTab(tabKingdomKeys);
		Chain_SkullNoise = new ItemKeychain((ItemKeyblade) SkullNoise, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_SkullNoise).setCreativeTab(tabKingdomKeys);
		Chain_SleepingLion = new ItemKeychain((ItemKeyblade) SleepingLion, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_SleepingLion).setCreativeTab(tabKingdomKeys);
		Chain_SoulEater = new ItemKeychain((ItemKeyblade) SoulEater, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_SoulEater).setCreativeTab(tabKingdomKeys);
		Chain_Spellbinder = new ItemKeychain((ItemKeyblade) Spellbinder, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Spellbinder).setCreativeTab(tabKingdomKeys);
		Chain_StarSeeker = new ItemKeychain((ItemKeyblade) StarSeeker, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_StarSeeker).setCreativeTab(tabKingdomKeys);
		Chain_Starlight = new ItemKeychain((ItemKeyblade) Starlight, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Starlight).setCreativeTab(tabKingdomKeys);
		Chain_Stormfall = new ItemKeychain((ItemKeyblade) Stormfall, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Stormfall).setCreativeTab(tabKingdomKeys);
		Chain_StrokeofMidnight = new ItemKeychain((ItemKeyblade) StrokeofMidnight, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_StrokeofMidnight).setCreativeTab(tabKingdomKeys);
		Chain_SweetDreams = new ItemKeychain((ItemKeyblade) SweetDreams, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_SweetDreams).setCreativeTab(tabKingdomKeys);
		Chain_SweetMemories = new ItemKeychain((ItemKeyblade) SweetMemories, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_SweetMemories).setCreativeTab(tabKingdomKeys);
		Chain_Sweetstack = new ItemKeychain((ItemKeyblade) Sweetstack, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Sweetstack).setCreativeTab(tabKingdomKeys);
		Chain_ThreeWishes = new ItemKeychain((ItemKeyblade) ThreeWishes, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_ThreeWishes).setCreativeTab(tabKingdomKeys);
		Chain_TotalEclipse = new ItemKeychain((ItemKeyblade) TotalEclipse, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_TotalEclipse).setCreativeTab(tabKingdomKeys);
		Chain_TreasureTrove = new ItemKeychain((ItemKeyblade) TreasureTrove, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_TreasureTrove).setCreativeTab(tabKingdomKeys);
		Chain_TrueLightsFlight = new ItemKeychain((ItemKeyblade) TrueLightsFlight, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_TrueLightsFlight).setCreativeTab(tabKingdomKeys);
		Chain_TwilightBlaze = new ItemKeychain((ItemKeyblade) TwilightBlaze, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_TwilightBlaze).setCreativeTab(tabKingdomKeys);
		Chain_TwoBecomeOne = new ItemKeychain((ItemKeyblade) TwoBecomeOne, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_TwoBecomeOne).setCreativeTab(tabKingdomKeys);
		Chain_UltimaWeaponKH1 = new ItemKeychain((ItemKeyblade) UltimaWeaponKH1, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_UltimaWeaponKH1).setCreativeTab(tabKingdomKeys);
		Chain_UltimaWeaponKH2 = new ItemKeychain((ItemKeyblade) UltimaWeaponKH2, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_UltimaWeaponKH2).setCreativeTab(tabKingdomKeys);
		Chain_UltimaWeaponBBS = new ItemKeychain((ItemKeyblade) UltimaWeaponBBS, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_UltimaWeaponBBS).setCreativeTab(tabKingdomKeys);
		Chain_UltimaWeaponDDD = new ItemKeychain((ItemKeyblade) UltimaWeaponDDD, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_UltimaWeaponDDD).setCreativeTab(tabKingdomKeys);
		Chain_Umbrella = new ItemKeychain((ItemKeyblade) Umbrella, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Umbrella).setCreativeTab(tabKingdomKeys);
		Chain_Unbound = new ItemKeychain((ItemKeyblade) Unbound, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_Unbound).setCreativeTab(tabKingdomKeys);
		Chain_UnicornisForetellersKeyblade = new ItemKeychain((ItemKeyblade) UnicornisForetellersKeyblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_UnicornisForetellersKeyblade).setCreativeTab(tabKingdomKeys);
		Chain_UrsusForetellersKeyblade = new ItemKeychain((ItemKeyblade) UrsusForetellersKeyblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_UrsusForetellersKeyblade).setCreativeTab(tabKingdomKeys);
		Chain_VictoryLine = new ItemKeychain((ItemKeyblade) VictoryLine, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_VictoryLine).setCreativeTab(tabKingdomKeys);
		Chain_VoidGear = new ItemKeychain((ItemKeyblade) VoidGear, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_VoidGear).setCreativeTab(tabKingdomKeys);
		Chain_VulpeusForetellersKeyblade = new ItemKeychain((ItemKeyblade) VulpeusForetellersKeyblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_VulpeusForetellersKeyblade).setCreativeTab(tabKingdomKeys);
		Chain_WaytotheDawn = new ItemKeychain((ItemKeyblade) WaytotheDawn, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_WaytotheDawn).setCreativeTab(tabKingdomKeys);
		Chain_WaywardWind = new ItemKeychain((ItemKeyblade) WaywardWind, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_WaywardWind).setCreativeTab(tabKingdomKeys);
		Chain_WinnersProof = new ItemKeychain((ItemKeyblade) WinnersProof, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_WinnersProof).setCreativeTab(tabKingdomKeys);
		Chain_WishingLamp = new ItemKeychain((ItemKeyblade) WishingLamp, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_WishingLamp).setCreativeTab(tabKingdomKeys);
		Chain_WishingStar = new ItemKeychain((ItemKeyblade) WishingStar, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_WishingStar).setCreativeTab(tabKingdomKeys);
		Chain_YoungXehanortsKeyblade = new ItemKeychain((ItemKeyblade) YoungXehanortsKeyblade, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_YoungXehanortsKeyblade).setCreativeTab(tabKingdomKeys);
		Chain_ZeroOne = new ItemKeychain((ItemKeyblade) ZeroOne, ToolMaterial.WOOD).setUnlocalizedName(Strings.Chain_ZeroOne).setCreativeTab(tabKingdomKeys);

		Munny = new ItemMunny().setUnlocalizedName(Strings.Munny).setCreativeTab(tabKingdomKeys);
		EmptyBottle = new Item().setUnlocalizedName(Strings.EmptyBottle).setCreativeTab(tabKingdomKeys).setMaxStackSize(1);
		Potion = new ItemPotion(0, true, "hp").setUnlocalizedName(Strings.Potion).setCreativeTab(tabKingdomKeys).setMaxStackSize(1);
		Ether = new ItemEther(0, true, "mp").setUnlocalizedName(Strings.Ether).setCreativeTab(tabKingdomKeys).setMaxStackSize(1);
		Elixir = new ItemElixir(0, true, "elixir").setUnlocalizedName(Strings.Elixir).setCreativeTab(tabKingdomKeys).setMaxStackSize(1);

		HpOrb = new ItemHpOrb().setUnlocalizedName(Strings.HpOrb).setCreativeTab(tabKingdomKeys).setMaxStackSize(1);
		DriveOrb = new ItemDriveOrb().setUnlocalizedName(Strings.DriveOrb).setCreativeTab(tabKingdomKeys);
		MagicOrb = new ItemMagicOrb().setUnlocalizedName(Strings.MagicOrb).setCreativeTab(tabKingdomKeys);
		Heart = new Item().setUnlocalizedName(Strings.Heart).setCreativeTab(tabKingdomKeys);
		DarkHeart = new Item().setUnlocalizedName(Strings.DarkHeart).setCreativeTab(tabKingdomKeys);
		PureHeart = new Item().setUnlocalizedName(Strings.PureHeart).setCreativeTab(tabKingdomKeys);
		KingdomHearts = new Item().setUnlocalizedName(Strings.KingdomHearts).setCreativeTab(tabKingdomKeys);
		DarkLeather = new Item().setUnlocalizedName(Strings.DarkLeather).setCreativeTab(tabKingdomKeys);
		SynthesisMaterial = new ItemSynthesisMaterial().setUnlocalizedName(Strings.SynthesisMaterial).setCreativeTab(tabKingdomKeys);
		IceCream = new ItemIceCream(5, true).setUnlocalizedName(Strings.IceCream).setCreativeTab(tabKingdomKeys);
		WinnerStick = new Item().setUnlocalizedName(Strings.WinnerStick).setCreativeTab(tabKingdomKeys);

		LevelUpMagicFire = new ItemUpgradeFire(Strings.Spell_Fire).setUnlocalizedName(Strings.LevelUpMagicFire).setCreativeTab(tabKingdomKeys);
		LevelUpMagicBlizzard = new ItemUpgradeBlizzard(Strings.Spell_Blizzard).setUnlocalizedName(Strings.LevelUpMagicBlizzard).setCreativeTab(tabKingdomKeys);
		LevelUpMagicThunder = new ItemUpgradeThunder(Strings.Spell_Thunder).setUnlocalizedName(Strings.LevelUpMagicThunder).setCreativeTab(tabKingdomKeys);
		LevelUpMagicCure = new ItemUpgradeCure(Strings.Spell_Cure).setUnlocalizedName(Strings.LevelUpMagicCure).setCreativeTab(tabKingdomKeys);
		LevelUpMagicAero = new ItemUpgradeAero(Strings.Spell_Aero).setUnlocalizedName(Strings.LevelUpMagicAero).setCreativeTab(tabKingdomKeys);
		LevelUpMagicStop = new ItemUpgradeStop(Strings.Spell_Stop).setUnlocalizedName(Strings.LevelUpMagicStop).setCreativeTab(tabKingdomKeys);

		LevelUpValor = new ItemUpgradeValor(Strings.Form_Valor).setUnlocalizedName(Strings.LevelUpValor).setCreativeTab(tabKingdomKeys);
		LevelUpWisdom = new ItemUpgradeWisdom(Strings.Form_Wisdom).setUnlocalizedName(Strings.LevelUpWisdom).setCreativeTab(tabKingdomKeys);
		LevelUpLimit = new ItemUpgradeLimit(Strings.Form_Limit).setUnlocalizedName(Strings.LevelUpLimit).setCreativeTab(tabKingdomKeys);
		LevelUpMaster = new ItemUpgradeMaster(Strings.Form_Master).setUnlocalizedName(Strings.LevelUpMaster).setCreativeTab(tabKingdomKeys);
		LevelUpFinal = new ItemUpgradeFinal(Strings.Form_Final).setUnlocalizedName(Strings.LevelUpFinal).setCreativeTab(tabKingdomKeys);

		SynthesisBagS = new ItemSynthesisBagS().setUnlocalizedName(Strings.SynthesisBagS).setCreativeTab(tabKingdomKeys).setMaxStackSize(1);
		SynthesisBagM = new ItemSynthesisBagM().setUnlocalizedName(Strings.SynthesisBagM).setCreativeTab(tabKingdomKeys).setMaxStackSize(1);
		SynthesisBagL = new ItemSynthesisBagL().setUnlocalizedName(Strings.SynthesisBagL).setCreativeTab(tabKingdomKeys).setMaxStackSize(1);
		
		Disc_Birth_by_Sleep_A_Link_to_the_Future = new ItemKKRecord(Strings.Disc_Birth_by_Sleep_A_Link_to_the_Future_Name, ModSounds.Birth_by_Sleep_A_Link_to_the_Future, Strings.Disc_Birth_by_Sleep_A_Link_to_the_Future, tabKingdomKeys, 7.29F);
		Disc_Darkness_of_the_Unknown = new ItemKKRecord(Strings.Disc_Darkness_of_the_Unknown_Name, ModSounds.Darkness_of_the_Unknown, Strings.Disc_Darkness_of_the_Unknown, tabKingdomKeys, 7.50F);
		Disc_Dearly_Beloved_Symphony_Version = new ItemKKRecord(Strings.Disc_Dearly_Beloved_Symphony_Version_Name, ModSounds.Dearly_Beloved_Symphony_Version, Strings.Disc_Dearly_Beloved_Symphony_Version, tabKingdomKeys, 2.33F);
		Disc_Dream_Drop_Distance_The_Next_Awakening = new ItemKKRecord(Strings.Disc_Dream_Drop_Distance_The_Next_Awakening_Name, ModSounds.Dream_Drop_Distance_The_Next_Awakening, Strings.Disc_Dream_Drop_Distance_The_Next_Awakening, tabKingdomKeys, 8.56F);
		Disc_Hikari_KINGDOM_Instrumental_Version = new ItemKKRecord(Strings.Disc_Hikari_KINGDOM_Instrumental_Version_Name, ModSounds.Hikari_KINGDOM_Instrumental_Version, Strings.Disc_Hikari_KINGDOM_Instrumental_Version, tabKingdomKeys, 3.42F);
		Disc_L_Oscurita_Dell_Ignoto = new ItemKKRecord(Strings.Disc_L_Oscurita_Dell_Ignoto_Name, ModSounds.L_Oscurita_Dell_Ignoto, Strings.Disc_L_Oscurita_Dell_Ignoto, tabKingdomKeys, 4.33F);
		Disc_Musique_pour_la_tristesse_de_Xion = new ItemKKRecord(Strings.Disc_Musique_pour_la_tristesse_de_Xion_Name, ModSounds.Musique_pour_la_tristesse_de_Xion, Strings.Disc_Musique_pour_la_tristesse_de_Xion, tabKingdomKeys, 3.57F);
		Disc_No_More_Bugs_Bug_Version = new ItemKKRecord(Strings.Disc_No_More_Bugs_Bug_Version_Name, ModSounds.No_More_Bugs_Bug_Version, Strings.Disc_No_More_Bugs_Bug_Version, tabKingdomKeys, 3.17F);
		Disc_Organization_XIII = new ItemKKRecord(Strings.Disc_Organization_XIII_Name, ModSounds.Organization_XIII, Strings.Disc_Organization_XIII, tabKingdomKeys, 2.32F);
		Disc_Sanctuary = new ItemKKRecord(Strings.Disc_Sanctuary_Name, ModSounds.Sanctuary, Strings.Disc_Sanctuary, tabKingdomKeys, 4.25F);
		Disc_Simple_And_Clean_PLANITb_Remix = new ItemKKRecord(Strings.Disc_Simple_And_Clean_PLANITb_Remix_Name, ModSounds.Simple_And_Clean_PLANITb_Remix, Strings.Disc_Simple_And_Clean_PLANITb_Remix, tabKingdomKeys, 2.37F);
		Disc_Sinister_Sundown = new ItemKKRecord(Strings.Disc_Sinister_Sundown_Name, ModSounds.Sinister_Sundown, Strings.Disc_Sinister_Sundown, tabKingdomKeys, 2.13F);
		Disc_The_13th_Anthology = new ItemKKRecord(Strings.Disc_The_13th_Anthology_Name, ModSounds.The_13th_Anthology, Strings.Disc_The_13th_Anthology, tabKingdomKeys, 6.38F);

		Recipe = new ItemRecipe().setUnlocalizedName(Strings.Recipe).setCreativeTab(tabKingdomKeys);
	}

	public static void register () {
		// Materials
		GameRegistry.register(BlazingInfusedCoal, new ResourceLocation(Reference.MODID, Strings.BlazingInfusedCoal));
		GameRegistry.register(FrostInfusedSnowBall, new ResourceLocation(Reference.MODID, Strings.FrostInfusedSnowBall));
		GameRegistry.register(StormyInfusedIron, new ResourceLocation(Reference.MODID, Strings.StormyInfusedIron));
		GameRegistry.register(MythrilInfusedDiamond, new ResourceLocation(Reference.MODID, Strings.MythrilInfusedDiamond));
		GameRegistry.register(LightningInfusedGold, new ResourceLocation(Reference.MODID, Strings.LightningInfusedGold));
		GameRegistry.register(BrightInfusedGlowStone, new ResourceLocation(Reference.MODID, Strings.BrightInfusedGlowStone));
		GameRegistry.register(DarkInfusedIron, new ResourceLocation(Reference.MODID, Strings.DarkInfusedIron));

		// Armour
		GameRegistry.register(OrganizationRobe_Helmet = new ItemOrganizationRobe(ORGANIZATIONROBE, 1, EntityEquipmentSlot.HEAD, 0, Strings.OrganizationRobe_Helmet), new ResourceLocation(Reference.MODID, Strings.OrganizationRobe_Helmet));
		GameRegistry.register(OrganizationRobe_Chestplate = new ItemOrganizationRobe(ORGANIZATIONROBE, 1, EntityEquipmentSlot.CHEST, 1, Strings.OrganizationRobe_Chestplate), new ResourceLocation(Reference.MODID, Strings.OrganizationRobe_Chestplate));
		GameRegistry.register(OrganizationRobe_Leggings = new ItemOrganizationRobe(ORGANIZATIONROBE, 2, EntityEquipmentSlot.LEGS, 2, Strings.OrganizationRobe_Leggings), new ResourceLocation(Reference.MODID, Strings.OrganizationRobe_Leggings));
		GameRegistry.register(OrganizationRobe_Boots = new ItemOrganizationRobe(ORGANIZATIONROBE, 1, EntityEquipmentSlot.FEET, 3, Strings.OrganizationRobe_Boots), new ResourceLocation(Reference.MODID, Strings.OrganizationRobe_Boots));

		GameRegistry.register(Terra_Helmet = new ItemTerraArmor(TERRA, 1, EntityEquipmentSlot.HEAD, 0, Strings.Terra_Helmet), new ResourceLocation(Reference.MODID, Strings.Terra_Helmet));
		GameRegistry.register(Terra_Chestplate = new ItemTerraArmor(TERRA, 1, EntityEquipmentSlot.CHEST, 1, Strings.Terra_Chestplate), new ResourceLocation(Reference.MODID, Strings.Terra_Chestplate));
		GameRegistry.register(Terra_Leggings = new ItemTerraArmor(TERRA, 2, EntityEquipmentSlot.LEGS, 2, Strings.Terra_Leggings), new ResourceLocation(Reference.MODID, Strings.Terra_Leggings));
		GameRegistry.register(Terra_Boots = new ItemTerraArmor(TERRA, 1, EntityEquipmentSlot.FEET, 3,Strings.Terra_Boots), new ResourceLocation(Reference.MODID, Strings.Terra_Boots));

		GameRegistry.register(Aqua_Helmet = new ItemAquaArmor(AQUA, 1, EntityEquipmentSlot.HEAD, 0, Strings.Aqua_Helmet), new ResourceLocation(Reference.MODID, Strings.Aqua_Helmet));
		GameRegistry.register(Aqua_Chestplate = new ItemAquaArmor(AQUA, 1, EntityEquipmentSlot.CHEST, 1, Strings.Aqua_Chestplate), new ResourceLocation(Reference.MODID, Strings.Aqua_Chestplate));
		GameRegistry.register(Aqua_Leggings = new ItemAquaArmor(AQUA, 2, EntityEquipmentSlot.LEGS, 2, Strings.Aqua_Leggings), new ResourceLocation(Reference.MODID, Strings.Aqua_Leggings));
		GameRegistry.register(Aqua_Boots = new ItemAquaArmor(AQUA, 1, EntityEquipmentSlot.FEET, 3, Strings.Aqua_Boots), new ResourceLocation(Reference.MODID, Strings.Aqua_Boots));

		GameRegistry.register(Ventus_Helmet = new ItemVentusArmor(VENTUS, 1, EntityEquipmentSlot.HEAD, 0, Strings.Ventus_Helmet), new ResourceLocation(Reference.MODID, Strings.Ventus_Helmet));
		GameRegistry.register(Ventus_Chestplate = new ItemVentusArmor(VENTUS, 1, EntityEquipmentSlot.CHEST, 1, Strings.Ventus_Chestplate), new ResourceLocation(Reference.MODID, Strings.Ventus_Chestplate));
		GameRegistry.register(Ventus_Leggings = new ItemVentusArmor(VENTUS, 2, EntityEquipmentSlot.LEGS, 2, Strings.Ventus_Leggings), new ResourceLocation(Reference.MODID, Strings.Ventus_Leggings));
		GameRegistry.register(Ventus_Boots = new ItemVentusArmor(VENTUS, 1, EntityEquipmentSlot.FEET, 3, Strings.Ventus_Boots), new ResourceLocation(Reference.MODID, Strings.Ventus_Boots));

		GameRegistry.register(Eraqus_Helmet = new ItemEraqusArmor(ERAQUS, 1, EntityEquipmentSlot.HEAD, 0, Strings.Eraqus_Helmet), new ResourceLocation(Reference.MODID, Strings.Eraqus_Helmet));
		GameRegistry.register(Eraqus_Chestplate = new ItemEraqusArmor(ERAQUS, 1, EntityEquipmentSlot.CHEST, 1, Strings.Eraqus_Chestplate), new ResourceLocation(Reference.MODID, Strings.Eraqus_Chestplate));
		GameRegistry.register(Eraqus_Leggings = new ItemEraqusArmor(ERAQUS, 2, EntityEquipmentSlot.LEGS, 2, Strings.Eraqus_Leggings), new ResourceLocation(Reference.MODID, Strings.Eraqus_Leggings));
		GameRegistry.register(Eraqus_Boots = new ItemEraqusArmor(ERAQUS, 1, EntityEquipmentSlot.FEET, 3, Strings.Eraqus_Boots), new ResourceLocation(Reference.MODID, Strings.Eraqus_Boots));

		// Organization
		GameRegistry.register(Interdiction, new ResourceLocation(Reference.MODID, Strings.Interdiction));
		GameRegistry.register(Sharpshooter, new ResourceLocation(Reference.MODID, Strings.Sharpshooter));
		GameRegistry.register(Lindworm, new ResourceLocation(Reference.MODID, Strings.Lindworm));
		GameRegistry.register(FrozenPride, new ResourceLocation(Reference.MODID, Strings.FrozenPride));
		GameRegistry.register(Skysplitter, new ResourceLocation(Reference.MODID, Strings.Skysplitter));
		GameRegistry.register(BookofRetribution, new ResourceLocation(Reference.MODID, Strings.BookofRetribution));
		GameRegistry.register(Lunatic, new ResourceLocation(Reference.MODID, Strings.Lunatic));
		GameRegistry.register(EternalFlames, new ResourceLocation(Reference.MODID, Strings.EternalFlames));
		GameRegistry.register(Arpeggio, new ResourceLocation(Reference.MODID, Strings.Arpeggio));
		GameRegistry.register(FairGame, new ResourceLocation(Reference.MODID, Strings.FairGame));
		GameRegistry.register(GracefulDahlia, new ResourceLocation(Reference.MODID, Strings.GracefulDahlia));
		GameRegistry.register(Foudre, new ResourceLocation(Reference.MODID, Strings.Foudre));
		GameRegistry.register(BlazeofGlory, new ResourceLocation(Reference.MODID, Strings.BlazeofGlory));
		GameRegistry.register(Prometheus, new ResourceLocation(Reference.MODID, Strings.Prometheus));
		GameRegistry.register(Ifrit, new ResourceLocation(Reference.MODID, Strings.Ifrit));

		// Knowledge
		GameRegistry.register(AbandonedKnowledge, new ResourceLocation(Reference.MODID, Strings.AbandonedKnowledge));
		GameRegistry.register(DarkKnowledge, new ResourceLocation(Reference.MODID, Strings.DarkKnowledge));
		GameRegistry.register(EclipsedKnowledge, new ResourceLocation(Reference.MODID, Strings.EclipsedKnowledge));
		GameRegistry.register(ForgottenKnowledge, new ResourceLocation(Reference.MODID, Strings.ForgottenKnowledge));
		GameRegistry.register(IlludedKnowledge, new ResourceLocation(Reference.MODID, Strings.IlludedKnowledge));
		GameRegistry.register(LostKnowledge, new ResourceLocation(Reference.MODID, Strings.LostKnowledge));
		GameRegistry.register(ManifestKnowledge, new ResourceLocation(Reference.MODID, Strings.ManifestKnowledge));
		GameRegistry.register(ObscuredKnowledge, new ResourceLocation(Reference.MODID, Strings.ObscuredKnowledge));
		GameRegistry.register(UnknownKnowledge, new ResourceLocation(Reference.MODID, Strings.UnknownKnowledge));
		GameRegistry.register(VoidKnowledge, new ResourceLocation(Reference.MODID, Strings.VoidKnowledge));

		// Keyblades
		GameRegistry.register(AbaddonPlasma, new ResourceLocation(Reference.MODID, Strings.AbaddonPlasma));
		GameRegistry.register(AbyssalTide, new ResourceLocation(Reference.MODID, Strings.AbyssalTide));
		GameRegistry.register(AllforOne, new ResourceLocation(Reference.MODID, Strings.AllforOne));
		GameRegistry.register(AnguisForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.AnguisForetellersKeyblade));
		GameRegistry.register(AstralBlast, new ResourceLocation(Reference.MODID, Strings.AstralBlast));
		GameRegistry.register(Aubade, new ResourceLocation(Reference.MODID, Strings.Aubade));
		GameRegistry.register(BondofFlame, new ResourceLocation(Reference.MODID, Strings.BondofFlame));
		GameRegistry.register(Brightcrest, new ResourceLocation(Reference.MODID, Strings.Brightcrest));
		GameRegistry.register(ChaosRipper, new ResourceLocation(Reference.MODID, Strings.ChaosRipper));
		GameRegistry.register(CircleofLife, new ResourceLocation(Reference.MODID, Strings.CircleofLife));
		GameRegistry.register(Counterpoint, new ResourceLocation(Reference.MODID, Strings.Counterpoint));
		GameRegistry.register(Crabclaw, new ResourceLocation(Reference.MODID, Strings.Crabclaw));
		GameRegistry.register(CrownofGuilt, new ResourceLocation(Reference.MODID, Strings.CrownofGuilt));
		GameRegistry.register(DarkerThanDark, new ResourceLocation(Reference.MODID, Strings.DarkerThanDark));
		GameRegistry.register(Darkgnaw, new ResourceLocation(Reference.MODID, Strings.Darkgnaw));
		GameRegistry.register(DecisivePumpkin, new ResourceLocation(Reference.MODID, Strings.DecisivePumpkin));
		GameRegistry.register(DestinysEmbrace, new ResourceLocation(Reference.MODID, Strings.DestinysEmbrace));
		GameRegistry.register(DiamondDust, new ResourceLocation(Reference.MODID, Strings.DiamondDust));
		GameRegistry.register(Divewing, new ResourceLocation(Reference.MODID, Strings.Divewing));
		GameRegistry.register(DivineRose, new ResourceLocation(Reference.MODID, Strings.DivineRose));
		GameRegistry.register(DreamSword, new ResourceLocation(Reference.MODID, Strings.DreamSword));
		GameRegistry.register(DualDisc, new ResourceLocation(Reference.MODID, Strings.DualDisc));
		GameRegistry.register(Earthshaker, new ResourceLocation(Reference.MODID, Strings.Earthshaker));
		GameRegistry.register(EndofPain, new ResourceLocation(Reference.MODID, Strings.EndofPain));
		GameRegistry.register(EndsoftheEarth, new ResourceLocation(Reference.MODID, Strings.EndsoftheEarth));
		GameRegistry.register(FairyHarp, new ResourceLocation(Reference.MODID, Strings.FairyHarp));
		GameRegistry.register(FairyStars, new ResourceLocation(Reference.MODID, Strings.FairyStars));
		GameRegistry.register(FatalCrest, new ResourceLocation(Reference.MODID, Strings.FatalCrest));
		GameRegistry.register(Fenrir, new ResourceLocation(Reference.MODID, Strings.Fenrir));
		GameRegistry.register(FerrisGear, new ResourceLocation(Reference.MODID, Strings.FerrisGear));
		GameRegistry.register(FollowtheWind, new ResourceLocation(Reference.MODID, Strings.FollowtheWind));
		GameRegistry.register(FrolicFlame, new ResourceLocation(Reference.MODID, Strings.FrolicFlame));
		GameRegistry.register(GlimpseofDarkness, new ResourceLocation(Reference.MODID, Strings.GlimpseofDarkness));
		GameRegistry.register(GuardianBell, new ResourceLocation(Reference.MODID, Strings.GuardianBell));
		GameRegistry.register(GuardianSoul, new ResourceLocation(Reference.MODID, Strings.GuardianSoul));
		GameRegistry.register(GullWing, new ResourceLocation(Reference.MODID, Strings.GullWing));
		GameRegistry.register(HerosCrest, new ResourceLocation(Reference.MODID, Strings.HerosCrest));
		GameRegistry.register(HiddenDragon, new ResourceLocation(Reference.MODID, Strings.HiddenDragon));
		GameRegistry.register(Hyperdrive, new ResourceLocation(Reference.MODID, Strings.Hyperdrive));
		GameRegistry.register(IncompleteKiblade, new ResourceLocation(Reference.MODID, Strings.IncompleteKiblade));
		GameRegistry.register(JungleKing, new ResourceLocation(Reference.MODID, Strings.JungleKing));
		GameRegistry.register(KeybladeofPeoplesHearts, new ResourceLocation(Reference.MODID, Strings.KeybladeofPeoplesHearts));
		GameRegistry.register(Kiblade, new ResourceLocation(Reference.MODID, Strings.Kiblade));
		GameRegistry.register(KingdomKey, new ResourceLocation(Reference.MODID, Strings.KingdomKey));
		GameRegistry.register(KingdomKeyD, new ResourceLocation(Reference.MODID, Strings.KingdomKeyD));
		GameRegistry.register(KnockoutPunch, new ResourceLocation(Reference.MODID, Strings.KnockoutPunch));
		GameRegistry.register(LadyLuck, new ResourceLocation(Reference.MODID, Strings.LadyLuck));
		GameRegistry.register(LeasKeyblade, new ResourceLocation(Reference.MODID, Strings.LeasKeyblade));
		GameRegistry.register(LeopardosForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.LeopardosForetellersKeyblade));
		GameRegistry.register(Leviathan, new ResourceLocation(Reference.MODID, Strings.Leviathan));
		GameRegistry.register(Lionheart, new ResourceLocation(Reference.MODID, Strings.Lionheart));
		GameRegistry.register(LostMemory, new ResourceLocation(Reference.MODID, Strings.LostMemory));
		GameRegistry.register(LunarEclipse, new ResourceLocation(Reference.MODID, Strings.LunarEclipse));
		GameRegistry.register(MarkofaHero, new ResourceLocation(Reference.MODID, Strings.MarkofaHero));
		GameRegistry.register(MasterXehanortsKeyblade, new ResourceLocation(Reference.MODID, Strings.MasterXehanortsKeyblade));
		GameRegistry.register(MastersDefender, new ResourceLocation(Reference.MODID, Strings.MastersDefender));
		GameRegistry.register(MaverickFlare, new ResourceLocation(Reference.MODID, Strings.MaverickFlare));
		GameRegistry.register(MetalChocobo, new ResourceLocation(Reference.MODID, Strings.MetalChocobo));
		GameRegistry.register(MidnightRoar, new ResourceLocation(Reference.MODID, Strings.MidnightRoar));
		GameRegistry.register(MirageSplit, new ResourceLocation(Reference.MODID, Strings.MirageSplit));
		GameRegistry.register(MissingAche, new ResourceLocation(Reference.MODID, Strings.MissingAche));
		GameRegistry.register(Monochrome, new ResourceLocation(Reference.MODID, Strings.Monochrome));
		GameRegistry.register(MysteriousAbyss, new ResourceLocation(Reference.MODID, Strings.MysteriousAbyss));
		GameRegistry.register(NightmaresEnd, new ResourceLocation(Reference.MODID, Strings.NightmaresEnd));
		GameRegistry.register(NightmaresEndandMirageSplit, new ResourceLocation(Reference.MODID, Strings.NightmaresEndandMirageSplit));
		GameRegistry.register(NoName, new ResourceLocation(Reference.MODID, Strings.NoName));
		GameRegistry.register(Oathkeeper, new ResourceLocation(Reference.MODID, Strings.Oathkeeper));
		GameRegistry.register(Oblivion, new ResourceLocation(Reference.MODID, Strings.Oblivion));
		GameRegistry.register(OceansRage, new ResourceLocation(Reference.MODID, Strings.OceansRage));
		GameRegistry.register(Olympia, new ResourceLocation(Reference.MODID, Strings.Olympia));
		GameRegistry.register(OmegaWeapon, new ResourceLocation(Reference.MODID, Strings.OmegaWeapon));
		GameRegistry.register(OminousBlight, new ResourceLocation(Reference.MODID, Strings.OminousBlight));
		GameRegistry.register(OneWingedAngel, new ResourceLocation(Reference.MODID, Strings.OneWingedAngel));
		GameRegistry.register(PainofSolitude, new ResourceLocation(Reference.MODID, Strings.PainofSolitude));
		GameRegistry.register(PhotonDebugger, new ResourceLocation(Reference.MODID, Strings.PhotonDebugger));
		GameRegistry.register(PixiePetal, new ResourceLocation(Reference.MODID, Strings.PixiePetal));
		GameRegistry.register(Pumpkinhead, new ResourceLocation(Reference.MODID, Strings.Pumpkinhead));
		GameRegistry.register(Rainfell, new ResourceLocation(Reference.MODID, Strings.Rainfell));
		GameRegistry.register(RejectionofFate, new ResourceLocation(Reference.MODID, Strings.RejectionofFate));
		GameRegistry.register(RoyalRadiance, new ResourceLocation(Reference.MODID, Strings.RoyalRadiance));
		GameRegistry.register(RumblingRose, new ResourceLocation(Reference.MODID, Strings.RumblingRose));
		GameRegistry.register(SignofInnocence, new ResourceLocation(Reference.MODID, Strings.SignofInnocence));
		GameRegistry.register(SilentDirge, new ResourceLocation(Reference.MODID, Strings.SilentDirge));
		GameRegistry.register(SkullNoise, new ResourceLocation(Reference.MODID, Strings.SkullNoise));
		GameRegistry.register(SleepingLion, new ResourceLocation(Reference.MODID, Strings.SleepingLion));
		GameRegistry.register(SoulEater, new ResourceLocation(Reference.MODID, Strings.SoulEater));
		GameRegistry.register(Spellbinder, new ResourceLocation(Reference.MODID, Strings.Spellbinder));
		GameRegistry.register(StarSeeker, new ResourceLocation(Reference.MODID, Strings.StarSeeker));
		GameRegistry.register(Starlight, new ResourceLocation(Reference.MODID, Strings.Starlight));
		GameRegistry.register(Stormfall, new ResourceLocation(Reference.MODID, Strings.Stormfall));
		GameRegistry.register(StrokeofMidnight, new ResourceLocation(Reference.MODID, Strings.StrokeofMidnight));
		GameRegistry.register(SweetDreams, new ResourceLocation(Reference.MODID, Strings.SweetDreams));
		GameRegistry.register(SweetMemories, new ResourceLocation(Reference.MODID, Strings.SweetMemories));
		GameRegistry.register(Sweetstack, new ResourceLocation(Reference.MODID, Strings.Sweetstack));
		GameRegistry.register(ThreeWishes, new ResourceLocation(Reference.MODID, Strings.ThreeWishes));
		GameRegistry.register(TotalEclipse, new ResourceLocation(Reference.MODID, Strings.TotalEclipse));
		GameRegistry.register(TreasureTrove, new ResourceLocation(Reference.MODID, Strings.TreasureTrove));
		GameRegistry.register(TrueLightsFlight, new ResourceLocation(Reference.MODID, Strings.TrueLightsFlight));
		GameRegistry.register(TwilightBlaze, new ResourceLocation(Reference.MODID, Strings.TwilightBlaze));
		GameRegistry.register(TwoBecomeOne, new ResourceLocation(Reference.MODID, Strings.TwoBecomeOne));
		GameRegistry.register(UltimaWeaponKH1, new ResourceLocation(Reference.MODID, Strings.UltimaWeaponKH1));
		GameRegistry.register(UltimaWeaponKH2, new ResourceLocation(Reference.MODID, Strings.UltimaWeaponKH2));
		GameRegistry.register(UltimaWeaponBBS, new ResourceLocation(Reference.MODID, Strings.UltimaWeaponBBS));
		GameRegistry.register(UltimaWeaponDDD, new ResourceLocation(Reference.MODID, Strings.UltimaWeaponDDD));
		GameRegistry.register(Umbrella, new ResourceLocation(Reference.MODID, Strings.Umbrella));
		GameRegistry.register(Unbound, new ResourceLocation(Reference.MODID, Strings.Unbound));
		GameRegistry.register(UnicornisForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.UnicornisForetellersKeyblade));
		GameRegistry.register(UrsusForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.UrsusForetellersKeyblade));
		GameRegistry.register(VictoryLine, new ResourceLocation(Reference.MODID, Strings.VictoryLine));
		GameRegistry.register(VoidGear, new ResourceLocation(Reference.MODID, Strings.VoidGear));
		GameRegistry.register(VulpeusForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.VulpeusForetellersKeyblade));
		GameRegistry.register(WaytotheDawn, new ResourceLocation(Reference.MODID, Strings.WaytotheDawn));
		GameRegistry.register(WaywardWind, new ResourceLocation(Reference.MODID, Strings.WaywardWind));
		GameRegistry.register(WinnersProof, new ResourceLocation(Reference.MODID, Strings.WinnersProof));
		GameRegistry.register(WishingLamp, new ResourceLocation(Reference.MODID, Strings.WishingLamp));
		GameRegistry.register(WishingStar, new ResourceLocation(Reference.MODID, Strings.WishingStar));
		GameRegistry.register(WoodenKeyblade, new ResourceLocation(Reference.MODID, Strings.WoodenKeyblade));
		GameRegistry.register(WoodenStick, new ResourceLocation(Reference.MODID, Strings.WoodenStick));
		GameRegistry.register(YoungXehanortsKeyblade, new ResourceLocation(Reference.MODID, Strings.YoungXehanortsKeyblade));
		GameRegistry.register(ZeroOne, new ResourceLocation(Reference.MODID, Strings.ZeroOne));

		// CHAINS
		GameRegistry.register(Chain_AbaddonPlasma, new ResourceLocation(Reference.MODID, Strings.Chain_AbaddonPlasma));
		GameRegistry.register(Chain_AbyssalTide, new ResourceLocation(Reference.MODID, Strings.Chain_AbyssalTide));
		GameRegistry.register(Chain_AllforOne, new ResourceLocation(Reference.MODID, Strings.Chain_AllforOne));
		GameRegistry.register(Chain_AnguisForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.Chain_AnguisForetellersKeyblade));
		GameRegistry.register(Chain_AstralBlast, new ResourceLocation(Reference.MODID, Strings.Chain_AstralBlast));
		GameRegistry.register(Chain_Aubade, new ResourceLocation(Reference.MODID, Strings.Chain_Aubade));
		GameRegistry.register(Chain_BondofFlame, new ResourceLocation(Reference.MODID, Strings.Chain_BondofFlame));
		GameRegistry.register(Chain_Brightcrest, new ResourceLocation(Reference.MODID, Strings.Chain_Brightcrest));
		GameRegistry.register(Chain_ChaosRipper, new ResourceLocation(Reference.MODID, Strings.Chain_ChaosRipper));
		GameRegistry.register(Chain_CircleofLife, new ResourceLocation(Reference.MODID, Strings.Chain_CircleofLife));
		GameRegistry.register(Chain_Counterpoint, new ResourceLocation(Reference.MODID, Strings.Chain_Counterpoint));
		GameRegistry.register(Chain_Crabclaw, new ResourceLocation(Reference.MODID, Strings.Chain_Crabclaw));
		GameRegistry.register(Chain_CrownofGuilt, new ResourceLocation(Reference.MODID, Strings.Chain_CrownofGuilt));
		GameRegistry.register(Chain_DarkerThanDark, new ResourceLocation(Reference.MODID, Strings.Chain_DarkerThanDark));
		GameRegistry.register(Chain_Darkgnaw, new ResourceLocation(Reference.MODID, Strings.Chain_Darkgnaw));
		GameRegistry.register(Chain_DecisivePumpkin, new ResourceLocation(Reference.MODID, Strings.Chain_DecisivePumpkin));
		GameRegistry.register(Chain_DestinysEmbrace, new ResourceLocation(Reference.MODID, Strings.Chain_DestinysEmbrace));
		GameRegistry.register(Chain_DiamondDust, new ResourceLocation(Reference.MODID, Strings.Chain_DiamondDust));
		GameRegistry.register(Chain_Divewing, new ResourceLocation(Reference.MODID, Strings.Chain_Divewing));
		GameRegistry.register(Chain_DivineRose, new ResourceLocation(Reference.MODID, Strings.Chain_DivineRose));
		GameRegistry.register(Chain_DreamSword, new ResourceLocation(Reference.MODID, Strings.Chain_DreamSword));
		GameRegistry.register(Chain_DualDisc, new ResourceLocation(Reference.MODID, Strings.Chain_DualDisc));
		GameRegistry.register(Chain_Earthshaker, new ResourceLocation(Reference.MODID, Strings.Chain_Earthshaker));
		GameRegistry.register(Chain_EndofPain, new ResourceLocation(Reference.MODID, Strings.Chain_EndofPain));
		GameRegistry.register(Chain_EndsoftheEarth, new ResourceLocation(Reference.MODID, Strings.Chain_EndsoftheEarth));
		GameRegistry.register(Chain_FairyHarp, new ResourceLocation(Reference.MODID, Strings.Chain_FairyHarp));
		GameRegistry.register(Chain_FairyStars, new ResourceLocation(Reference.MODID, Strings.Chain_FairyStars));
		GameRegistry.register(Chain_FatalCrest, new ResourceLocation(Reference.MODID, Strings.Chain_FatalCrest));
		GameRegistry.register(Chain_Fenrir, new ResourceLocation(Reference.MODID, Strings.Chain_Fenrir));
		GameRegistry.register(Chain_FerrisGear, new ResourceLocation(Reference.MODID, Strings.Chain_FerrisGear));
		GameRegistry.register(Chain_FollowtheWind, new ResourceLocation(Reference.MODID, Strings.Chain_FollowtheWind));
		GameRegistry.register(Chain_FrolicFlame, new ResourceLocation(Reference.MODID, Strings.Chain_FrolicFlame));
		GameRegistry.register(Chain_GlimpseofDarkness, new ResourceLocation(Reference.MODID, Strings.Chain_GlimpseofDarkness));
		GameRegistry.register(Chain_GuardianBell, new ResourceLocation(Reference.MODID, Strings.Chain_GuardianBell));
		GameRegistry.register(Chain_GuardianSoul, new ResourceLocation(Reference.MODID, Strings.Chain_GuardianSoul));
		GameRegistry.register(Chain_GullWing, new ResourceLocation(Reference.MODID, Strings.Chain_GullWing));
		GameRegistry.register(Chain_HerosCrest, new ResourceLocation(Reference.MODID, Strings.Chain_HerosCrest));
		GameRegistry.register(Chain_HiddenDragon, new ResourceLocation(Reference.MODID, Strings.Chain_HiddenDragon));
		GameRegistry.register(Chain_Hyperdrive, new ResourceLocation(Reference.MODID, Strings.Chain_Hyperdrive));
		GameRegistry.register(Chain_IncompleteKiblade, new ResourceLocation(Reference.MODID, Strings.Chain_IncompleteKiblade));
		GameRegistry.register(Chain_JungleKing, new ResourceLocation(Reference.MODID, Strings.Chain_JungleKing));
		GameRegistry.register(Chain_KeybladeofPeoplesHearts, new ResourceLocation(Reference.MODID, Strings.Chain_KeybladeofPeoplesHearts));
		GameRegistry.register(Chain_Kiblade, new ResourceLocation(Reference.MODID, Strings.Chain_Kiblade));
		GameRegistry.register(Chain_KingdomKey, new ResourceLocation(Reference.MODID, Strings.Chain_KingdomKey));
		GameRegistry.register(Chain_KingdomKeyD, new ResourceLocation(Reference.MODID, Strings.Chain_KingdomKeyD));
		GameRegistry.register(Chain_KnockoutPunch, new ResourceLocation(Reference.MODID, Strings.Chain_KnockoutPunch));
		GameRegistry.register(Chain_LadyLuck, new ResourceLocation(Reference.MODID, Strings.Chain_LadyLuck));
		GameRegistry.register(Chain_LeasKeyblade, new ResourceLocation(Reference.MODID, Strings.Chain_LeasKeyblade));
		GameRegistry.register(Chain_LeopardosForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.Chain_LeopardosForetellersKeyblade));
		GameRegistry.register(Chain_Leviathan, new ResourceLocation(Reference.MODID, Strings.Chain_Leviathan));
		GameRegistry.register(Chain_Lionheart, new ResourceLocation(Reference.MODID, Strings.Chain_Lionheart));
		GameRegistry.register(Chain_LostMemory, new ResourceLocation(Reference.MODID, Strings.Chain_LostMemory));
		GameRegistry.register(Chain_LunarEclipse, new ResourceLocation(Reference.MODID, Strings.Chain_LunarEclipse));
		GameRegistry.register(Chain_MarkofaHero, new ResourceLocation(Reference.MODID, Strings.Chain_MarkofaHero));
		GameRegistry.register(Chain_MasterXehanortsKeyblade, new ResourceLocation(Reference.MODID, Strings.Chain_MasterXehanortsKeyblade));
		GameRegistry.register(Chain_MastersDefender, new ResourceLocation(Reference.MODID, Strings.Chain_MastersDefender));
		GameRegistry.register(Chain_MaverickFlare, new ResourceLocation(Reference.MODID, Strings.Chain_MaverickFlare));
		GameRegistry.register(Chain_MetalChocobo, new ResourceLocation(Reference.MODID, Strings.Chain_MetalChocobo));
		GameRegistry.register(Chain_MidnightRoar, new ResourceLocation(Reference.MODID, Strings.Chain_MidnightRoar));
		GameRegistry.register(Chain_MirageSplit, new ResourceLocation(Reference.MODID, Strings.Chain_MirageSplit));
		GameRegistry.register(Chain_MissingAche, new ResourceLocation(Reference.MODID, Strings.Chain_MissingAche));
		GameRegistry.register(Chain_Monochrome, new ResourceLocation(Reference.MODID, Strings.Chain_Monochrome));
		GameRegistry.register(Chain_MysteriousAbyss, new ResourceLocation(Reference.MODID, Strings.Chain_MysteriousAbyss));
		GameRegistry.register(Chain_NightmaresEnd, new ResourceLocation(Reference.MODID, Strings.Chain_NightmaresEnd));
		GameRegistry.register(Chain_NightmaresEndandMirageSplit, new ResourceLocation(Reference.MODID, Strings.Chain_NightmaresEndandMirageSplit));
		GameRegistry.register(Chain_NoName, new ResourceLocation(Reference.MODID, Strings.Chain_NoName));
		GameRegistry.register(Chain_Oathkeeper, new ResourceLocation(Reference.MODID, Strings.Chain_Oathkeeper));
		GameRegistry.register(Chain_Oblivion, new ResourceLocation(Reference.MODID, Strings.Chain_Oblivion));
		GameRegistry.register(Chain_OceansRage, new ResourceLocation(Reference.MODID, Strings.Chain_OceansRage));
		GameRegistry.register(Chain_Olympia, new ResourceLocation(Reference.MODID, Strings.Chain_Olympia));
		GameRegistry.register(Chain_OmegaWeapon, new ResourceLocation(Reference.MODID, Strings.Chain_OmegaWeapon));
		GameRegistry.register(Chain_OminousBlight, new ResourceLocation(Reference.MODID, Strings.Chain_OminousBlight));
		GameRegistry.register(Chain_OneWingedAngel, new ResourceLocation(Reference.MODID, Strings.Chain_OneWingedAngel));
		GameRegistry.register(Chain_PainofSolitude, new ResourceLocation(Reference.MODID, Strings.Chain_PainofSolitude));
		GameRegistry.register(Chain_PhotonDebugger, new ResourceLocation(Reference.MODID, Strings.Chain_PhotonDebugger));
		GameRegistry.register(Chain_PixiePetal, new ResourceLocation(Reference.MODID, Strings.Chain_PixiePetal));
		GameRegistry.register(Chain_Pumpkinhead, new ResourceLocation(Reference.MODID, Strings.Chain_Pumpkinhead));
		GameRegistry.register(Chain_Rainfell, new ResourceLocation(Reference.MODID, Strings.Chain_Rainfell));
		GameRegistry.register(Chain_RejectionofFate, new ResourceLocation(Reference.MODID, Strings.Chain_RejectionofFate));
		GameRegistry.register(Chain_RoyalRadiance, new ResourceLocation(Reference.MODID, Strings.Chain_RoyalRadiance));
		GameRegistry.register(Chain_RumblingRose, new ResourceLocation(Reference.MODID, Strings.Chain_RumblingRose));
		GameRegistry.register(Chain_SignofInnocence, new ResourceLocation(Reference.MODID, Strings.Chain_SignofInnocence));
		GameRegistry.register(Chain_SilentDirge, new ResourceLocation(Reference.MODID, Strings.Chain_SilentDirge));
		GameRegistry.register(Chain_SkullNoise, new ResourceLocation(Reference.MODID, Strings.Chain_SkullNoise));
		GameRegistry.register(Chain_SleepingLion, new ResourceLocation(Reference.MODID, Strings.Chain_SleepingLion));
		GameRegistry.register(Chain_SoulEater, new ResourceLocation(Reference.MODID, Strings.Chain_SoulEater));
		GameRegistry.register(Chain_Spellbinder, new ResourceLocation(Reference.MODID, Strings.Chain_Spellbinder));
		GameRegistry.register(Chain_StarSeeker, new ResourceLocation(Reference.MODID, Strings.Chain_StarSeeker));
		GameRegistry.register(Chain_Starlight, new ResourceLocation(Reference.MODID, Strings.Chain_Starlight));
		GameRegistry.register(Chain_Stormfall, new ResourceLocation(Reference.MODID, Strings.Chain_Stormfall));
		GameRegistry.register(Chain_StrokeofMidnight, new ResourceLocation(Reference.MODID, Strings.Chain_StrokeofMidnight));
		GameRegistry.register(Chain_SweetDreams, new ResourceLocation(Reference.MODID, Strings.Chain_SweetDreams));
		GameRegistry.register(Chain_SweetMemories, new ResourceLocation(Reference.MODID, Strings.Chain_SweetMemories));
		GameRegistry.register(Chain_Sweetstack, new ResourceLocation(Reference.MODID, Strings.Chain_Sweetstack));
		GameRegistry.register(Chain_ThreeWishes, new ResourceLocation(Reference.MODID, Strings.Chain_ThreeWishes));
		GameRegistry.register(Chain_TotalEclipse, new ResourceLocation(Reference.MODID, Strings.Chain_TotalEclipse));
		GameRegistry.register(Chain_TreasureTrove, new ResourceLocation(Reference.MODID, Strings.Chain_TreasureTrove));
		GameRegistry.register(Chain_TrueLightsFlight, new ResourceLocation(Reference.MODID, Strings.Chain_TrueLightsFlight));
		GameRegistry.register(Chain_TwilightBlaze, new ResourceLocation(Reference.MODID, Strings.Chain_TwilightBlaze));
		GameRegistry.register(Chain_TwoBecomeOne, new ResourceLocation(Reference.MODID, Strings.Chain_TwoBecomeOne));
		GameRegistry.register(Chain_UltimaWeaponKH1, new ResourceLocation(Reference.MODID, Strings.Chain_UltimaWeaponKH1));
		GameRegistry.register(Chain_UltimaWeaponKH2, new ResourceLocation(Reference.MODID, Strings.Chain_UltimaWeaponKH2));
		GameRegistry.register(Chain_UltimaWeaponBBS, new ResourceLocation(Reference.MODID, Strings.Chain_UltimaWeaponBBS));
		GameRegistry.register(Chain_UltimaWeaponDDD, new ResourceLocation(Reference.MODID, Strings.Chain_UltimaWeaponDDD));
		GameRegistry.register(Chain_Umbrella, new ResourceLocation(Reference.MODID, Strings.Chain_Umbrella));
		GameRegistry.register(Chain_Unbound, new ResourceLocation(Reference.MODID, Strings.Chain_Unbound));
		GameRegistry.register(Chain_UnicornisForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.Chain_UnicornisForetellersKeyblade));
		GameRegistry.register(Chain_UrsusForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.Chain_UrsusForetellersKeyblade));
		GameRegistry.register(Chain_VictoryLine, new ResourceLocation(Reference.MODID, Strings.Chain_VictoryLine));
		GameRegistry.register(Chain_VoidGear, new ResourceLocation(Reference.MODID, Strings.Chain_VoidGear));
		GameRegistry.register(Chain_VulpeusForetellersKeyblade, new ResourceLocation(Reference.MODID, Strings.Chain_VulpeusForetellersKeyblade));
		GameRegistry.register(Chain_WaytotheDawn, new ResourceLocation(Reference.MODID, Strings.Chain_WaytotheDawn));
		GameRegistry.register(Chain_WaywardWind, new ResourceLocation(Reference.MODID, Strings.Chain_WaywardWind));
		GameRegistry.register(Chain_WinnersProof, new ResourceLocation(Reference.MODID, Strings.Chain_WinnersProof));
		GameRegistry.register(Chain_WishingLamp, new ResourceLocation(Reference.MODID, Strings.Chain_WishingLamp));
		GameRegistry.register(Chain_WishingStar, new ResourceLocation(Reference.MODID, Strings.Chain_WishingStar));
		GameRegistry.register(Chain_YoungXehanortsKeyblade, new ResourceLocation(Reference.MODID, Strings.Chain_YoungXehanortsKeyblade));
		GameRegistry.register(Chain_ZeroOne, new ResourceLocation(Reference.MODID, Strings.Chain_ZeroOne));

		// ITEMS
		GameRegistry.register(Munny, new ResourceLocation(Reference.MODID, Strings.Munny));
		GameRegistry.register(EmptyBottle, new ResourceLocation(Reference.MODID, Strings.EmptyBottle));
		GameRegistry.register(Potion, new ResourceLocation(Reference.MODID, Strings.Potion));
		GameRegistry.register(Ether, new ResourceLocation(Reference.MODID, Strings.Ether));
		GameRegistry.register(Elixir, new ResourceLocation(Reference.MODID, Strings.Elixir));
		GameRegistry.register(HpOrb, new ResourceLocation(Reference.MODID, Strings.HpOrb));
		GameRegistry.register(DriveOrb, new ResourceLocation(Reference.MODID, Strings.DriveOrb));
		GameRegistry.register(MagicOrb, new ResourceLocation(Reference.MODID, Strings.MagicOrb));
		GameRegistry.register(Heart, new ResourceLocation(Reference.MODID, Strings.Heart));
		GameRegistry.register(DarkHeart, new ResourceLocation(Reference.MODID, Strings.DarkHeart));
		GameRegistry.register(PureHeart, new ResourceLocation(Reference.MODID, Strings.PureHeart));
		GameRegistry.register(KingdomHearts, new ResourceLocation(Reference.MODID, Strings.KingdomHearts));
		GameRegistry.register(DarkLeather, new ResourceLocation(Reference.MODID, Strings.DarkLeather));
		GameRegistry.register(SynthesisMaterial, new ResourceLocation(Reference.MODID, Strings.SynthesisMaterial));
		GameRegistry.register(Recipe, new ResourceLocation(Reference.MODID, Strings.Recipe));
		GameRegistry.register(IceCream, new ResourceLocation(Reference.MODID, Strings.IceCream));
		GameRegistry.register(WinnerStick, new ResourceLocation(Reference.MODID, Strings.WinnerStick));
		GameRegistry.register(LevelUpMagicFire, new ResourceLocation(Reference.MODID, Strings.LevelUpMagicFire));
		GameRegistry.register(LevelUpMagicBlizzard, new ResourceLocation(Reference.MODID, Strings.LevelUpMagicBlizzard));
		GameRegistry.register(LevelUpMagicThunder, new ResourceLocation(Reference.MODID, Strings.LevelUpMagicThunder));
		GameRegistry.register(LevelUpMagicCure, new ResourceLocation(Reference.MODID, Strings.LevelUpMagicCure));
		GameRegistry.register(LevelUpMagicAero, new ResourceLocation(Reference.MODID, Strings.LevelUpMagicAero));
		GameRegistry.register(LevelUpMagicStop, new ResourceLocation(Reference.MODID, Strings.LevelUpMagicStop));
		GameRegistry.register(LevelUpValor, new ResourceLocation(Reference.MODID, Strings.LevelUpValor));
		GameRegistry.register(LevelUpWisdom, new ResourceLocation(Reference.MODID, Strings.LevelUpWisdom));
		GameRegistry.register(LevelUpLimit, new ResourceLocation(Reference.MODID, Strings.LevelUpLimit));
		GameRegistry.register(LevelUpMaster, new ResourceLocation(Reference.MODID, Strings.LevelUpMaster));
		GameRegistry.register(LevelUpFinal, new ResourceLocation(Reference.MODID, Strings.LevelUpFinal));
		GameRegistry.register(SynthesisBagS, new ResourceLocation(Reference.MODID, Strings.SynthesisBagS));
		GameRegistry.register(SynthesisBagM, new ResourceLocation(Reference.MODID, Strings.SynthesisBagM));
		GameRegistry.register(SynthesisBagL, new ResourceLocation(Reference.MODID, Strings.SynthesisBagL));

		// DISCS
		GameRegistry.register(Disc_Birth_by_Sleep_A_Link_to_the_Future, new ResourceLocation(Reference.MODID, Strings.Disc_Birth_by_Sleep_A_Link_to_the_Future));
		GameRegistry.register(Disc_Darkness_of_the_Unknown, new ResourceLocation(Reference.MODID, Strings.Disc_Darkness_of_the_Unknown));
		GameRegistry.register(Disc_Dearly_Beloved_Symphony_Version, new ResourceLocation(Reference.MODID, Strings.Disc_Dearly_Beloved_Symphony_Version));
		GameRegistry.register(Disc_Dream_Drop_Distance_The_Next_Awakening, new ResourceLocation(Reference.MODID, Strings.Disc_Dream_Drop_Distance_The_Next_Awakening));
		GameRegistry.register(Disc_Hikari_KINGDOM_Instrumental_Version, new ResourceLocation(Reference.MODID, Strings.Disc_Hikari_KINGDOM_Instrumental_Version));
		GameRegistry.register(Disc_L_Oscurita_Dell_Ignoto, new ResourceLocation(Reference.MODID, Strings.Disc_L_Oscurita_Dell_Ignoto));
		GameRegistry.register(Disc_Musique_pour_la_tristesse_de_Xion, new ResourceLocation(Reference.MODID, Strings.Disc_Musique_pour_la_tristesse_de_Xion));
		GameRegistry.register(Disc_No_More_Bugs_Bug_Version, new ResourceLocation(Reference.MODID, Strings.Disc_No_More_Bugs_Bug_Version));
		GameRegistry.register(Disc_Organization_XIII, new ResourceLocation(Reference.MODID, Strings.Disc_Organization_XIII));
		GameRegistry.register(Disc_Sanctuary, new ResourceLocation(Reference.MODID, Strings.Disc_Sanctuary));
		GameRegistry.register(Disc_Simple_And_Clean_PLANITb_Remix, new ResourceLocation(Reference.MODID, Strings.Disc_Simple_And_Clean_PLANITb_Remix));
		GameRegistry.register(Disc_Sinister_Sundown, new ResourceLocation(Reference.MODID, Strings.Disc_Sinister_Sundown));
		GameRegistry.register(Disc_The_13th_Anthology, new ResourceLocation(Reference.MODID, Strings.Disc_The_13th_Anthology));
	}

	public static void registerRenders () {
		// Materials
		registerRender(BlazingInfusedCoal);
		registerRender(FrostInfusedSnowBall);
		registerRender(StormyInfusedIron);
		registerRender(MythrilInfusedDiamond);
		registerRender(LightningInfusedGold);
		registerRender(BrightInfusedGlowStone);
		registerRender(DarkInfusedIron);

		// Armour
		registerRender(OrganizationRobe_Helmet);
		registerRender(OrganizationRobe_Chestplate);
		registerRender(OrganizationRobe_Leggings);
		registerRender(OrganizationRobe_Boots);

		registerRender(Terra_Helmet);
		registerRender(Terra_Chestplate);
		registerRender(Terra_Leggings);
		registerRender(Terra_Boots);

		registerRender(Aqua_Helmet);
		registerRender(Aqua_Chestplate);
		registerRender(Aqua_Leggings);
		registerRender(Aqua_Boots);

		registerRender(Ventus_Helmet);
		registerRender(Ventus_Chestplate);
		registerRender(Ventus_Leggings);
		registerRender(Ventus_Boots);

		registerRender(Eraqus_Helmet);
		registerRender(Eraqus_Chestplate);
		registerRender(Eraqus_Leggings);
		registerRender(Eraqus_Boots);

		// Organization
		registerRender(Interdiction);
		registerRender(Sharpshooter);
		registerRender(Lindworm);
		registerRender(FrozenPride);
		registerRender(Skysplitter);
		registerRender(BookofRetribution);
		registerRender(Lunatic);
		registerRender(FairGame);
		registerRender(GracefulDahlia);
		registerRender(Foudre);

		// Knowledge
		registerRender(AbandonedKnowledge);
		registerRender(DarkKnowledge);
		registerRender(EclipsedKnowledge);
		registerRender(ForgottenKnowledge);
		registerRender(IlludedKnowledge);
		registerRender(LostKnowledge);
		registerRender(ManifestKnowledge);
		registerRender(ObscuredKnowledge);
		registerRender(UnknownKnowledge);
		registerRender(VoidKnowledge);

		// Keyblades
		registerRender(AbaddonPlasma);
		registerRender(AbyssalTide);
		registerRender(AnguisForetellersKeyblade);
		registerRender(AstralBlast);
		registerRender(Aubade);
		registerRender(CrownofGuilt);
		registerRender(DarkerThanDark);
		registerRender(GlimpseofDarkness);
		registerRender(LeopardosForetellersKeyblade);
		registerRender(Leviathan);
		registerRender(LunarEclipse);
		registerRender(MaverickFlare);
		registerRender(MidnightRoar);
		registerRender(MissingAche);
		registerRender(OmegaWeapon);
		registerRender(OminousBlight);
		registerRender(PainofSolitude);
		registerRender(PixiePetal);
		registerRender(RejectionofFate);
		registerRender(SignofInnocence);
		registerRender(SilentDirge);
		registerRender(Starlight);
		registerRender(TotalEclipse);
		registerRender(TrueLightsFlight);
		registerRender(TwilightBlaze);
		registerRender(Umbrella);
		registerRender(UnicornisForetellersKeyblade);
		registerRender(UrsusForetellersKeyblade);
		registerRender(VulpeusForetellersKeyblade);
		registerRender(ZeroOne);

		// CHAINS
		registerRender(Chain_AbaddonPlasma);
		registerRender(Chain_AbyssalTide);
		registerRender(Chain_AllforOne);
		registerRender(Chain_AnguisForetellersKeyblade);
		registerRender(Chain_AstralBlast);
		registerRender(Chain_Aubade);
		registerRender(Chain_BondofFlame);
		registerRender(Chain_Brightcrest);
		registerRender(Chain_ChaosRipper);
		registerRender(Chain_CircleofLife);
		registerRender(Chain_Counterpoint);
		registerRender(Chain_Counterpoint);
		registerRender(Chain_Crabclaw);
		registerRender(Chain_CrownofGuilt);
		registerRender(Chain_DarkerThanDark);
		registerRender(Chain_Darkgnaw);
		registerRender(Chain_DecisivePumpkin);
		registerRender(Chain_DestinysEmbrace);
		registerRender(Chain_DiamondDust);
		registerRender(Chain_Divewing);
		registerRender(Chain_DivineRose);
		registerRender(Chain_DreamSword);
		registerRender(Chain_DualDisc);
		registerRender(Chain_Earthshaker);
		registerRender(Chain_EndofPain);
		registerRender(Chain_EndsoftheEarth);
		registerRender(Chain_FairyHarp);
		registerRender(Chain_FairyStars);
		registerRender(Chain_FatalCrest);
		registerRender(Chain_Fenrir);
		registerRender(Chain_FerrisGear);
		registerRender(Chain_FollowtheWind);
		registerRender(Chain_FrolicFlame);
		registerRender(Chain_GlimpseofDarkness);
		registerRender(Chain_GuardianBell);
		registerRender(Chain_GuardianSoul);
		registerRender(Chain_GullWing);
		registerRender(Chain_HerosCrest);
		registerRender(Chain_HiddenDragon);
		registerRender(Chain_Hyperdrive);
		registerRender(Chain_IncompleteKiblade);
		registerRender(Chain_JungleKing);
		registerRender(Chain_KeybladeofPeoplesHearts);
		registerRender(Chain_Kiblade);
		registerRender(Chain_KingdomKey);
		registerRender(Chain_KingdomKeyD);
		registerRender(Chain_KnockoutPunch);
		registerRender(Chain_LadyLuck);
		registerRender(Chain_LeasKeyblade);
		registerRender(Chain_LeopardosForetellersKeyblade);
		registerRender(Chain_Leviathan);
		registerRender(Chain_Lionheart);
		registerRender(Chain_LostMemory);
		registerRender(Chain_LunarEclipse);
		registerRender(Chain_MarkofaHero);
		registerRender(Chain_MasterXehanortsKeyblade);
		registerRender(Chain_MastersDefender);
		registerRender(Chain_MaverickFlare);
		registerRender(Chain_MetalChocobo);
		registerRender(Chain_MidnightRoar);
		registerRender(Chain_MirageSplit);
		registerRender(Chain_MissingAche);
		registerRender(Chain_Monochrome);
		registerRender(Chain_MysteriousAbyss);
		registerRender(Chain_NightmaresEnd);
		registerRender(Chain_NightmaresEndandMirageSplit);
		registerRender(Chain_NoName);
		registerRender(Chain_Oathkeeper);
		registerRender(Chain_Oblivion);
		registerRender(Chain_OceansRage);
		registerRender(Chain_Olympia);
		registerRender(Chain_OmegaWeapon);
		registerRender(Chain_OminousBlight);
		registerRender(Chain_OneWingedAngel);
		registerRender(Chain_PainofSolitude);
		registerRender(Chain_PhotonDebugger);
		registerRender(Chain_PixiePetal);
		registerRender(Chain_Pumpkinhead);
		registerRender(Chain_Rainfell);
		registerRender(Chain_RejectionofFate);
		registerRender(Chain_RoyalRadiance);
		registerRender(Chain_RumblingRose);
		registerRender(Chain_SignofInnocence);
		registerRender(Chain_SilentDirge);
		registerRender(Chain_SkullNoise);
		registerRender(Chain_SleepingLion);
		registerRender(Chain_SoulEater);
		registerRender(Chain_Spellbinder);
		registerRender(Chain_StarSeeker);
		registerRender(Chain_Starlight);
		registerRender(Chain_Stormfall);
		registerRender(Chain_StrokeofMidnight);
		registerRender(Chain_SweetDreams);
		registerRender(Chain_SweetMemories);
		registerRender(Chain_Sweetstack);
		registerRender(Chain_ThreeWishes);
		registerRender(Chain_TotalEclipse);
		registerRender(Chain_TreasureTrove);
		registerRender(Chain_TrueLightsFlight);
		registerRender(Chain_TwilightBlaze);
		registerRender(Chain_TwoBecomeOne);
		registerRender(Chain_UltimaWeaponKH1);
		registerRender(Chain_UltimaWeaponKH2);
		registerRender(Chain_UltimaWeaponBBS);
		registerRender(Chain_UltimaWeaponDDD);
		registerRender(Chain_Umbrella);
		registerRender(Chain_Unbound);
		registerRender(Chain_UnicornisForetellersKeyblade);
		registerRender(Chain_UrsusForetellersKeyblade);
		registerRender(Chain_VictoryLine);
		registerRender(Chain_VoidGear);
		registerRender(Chain_VulpeusForetellersKeyblade);
		registerRender(Chain_WaytotheDawn);
		registerRender(Chain_WaywardWind);
		registerRender(Chain_WinnersProof);
		registerRender(Chain_WishingLamp);
		registerRender(Chain_WishingStar);
		registerRender(Chain_YoungXehanortsKeyblade);
		registerRender(Chain_ZeroOne);

		// Other items
		registerRender(Munny);
		registerRender(EmptyBottle);
		registerRender(Potion);
		registerRender(Ether);
		registerRender(Elixir);
		registerRender(HpOrb);
		registerRender(DriveOrb);
		registerRender(MagicOrb);
		registerRender(Heart);
		registerRender(DarkHeart);
		registerRender(PureHeart);
		registerRender(KingdomHearts);
		registerRender(DarkLeather);
		registerRender(SynthesisMaterial);
		registerRender(Recipe);
		registerRender(IceCream);
		registerRender(WinnerStick);
		registerRender(LevelUpMagicFire);
		registerRender(LevelUpMagicBlizzard);
		registerRender(LevelUpMagicThunder);
		registerRender(LevelUpMagicCure);
		registerRender(LevelUpMagicAero);
		registerRender(LevelUpMagicStop);
		registerRender(LevelUpValor);
		registerRender(LevelUpWisdom);
		registerRender(LevelUpLimit);
		registerRender(LevelUpMaster);
		registerRender(LevelUpFinal);
		registerRender(SynthesisBagS);
		registerRender(SynthesisBagM);
		registerRender(SynthesisBagL);

		// Discs
		registerRender(Disc_Birth_by_Sleep_A_Link_to_the_Future);
		registerRender(Disc_Darkness_of_the_Unknown);
		registerRender(Disc_Dearly_Beloved_Symphony_Version);
		registerRender(Disc_Dream_Drop_Distance_The_Next_Awakening);
		registerRender(Disc_Hikari_KINGDOM_Instrumental_Version);
		registerRender(Disc_L_Oscurita_Dell_Ignoto);
		registerRender(Disc_Musique_pour_la_tristesse_de_Xion);
		registerRender(Disc_No_More_Bugs_Bug_Version);
		registerRender(Disc_Organization_XIII);
		registerRender(Disc_Sanctuary);
		registerRender(Disc_Simple_And_Clean_PLANITb_Remix);
		registerRender(Disc_Sinister_Sundown);
		registerRender(Disc_The_13th_Anthology);

	}

	public static void registerRender (Item item) {
		Minecraft.getMinecraft().getRenderItem().getItemModelMesher().register(item, 0, new ModelResourceLocation(Reference.MODID + ":" + item.getUnlocalizedName().substring(5), "inventory"));
	}
}
